/* CIF PROCESS (295, 56), (150, 75) */
PROCESS orchestrator
/* CIF COMMENT (405, 192), (71, 35) */
COMMENT 'Hello';
    /* CIF TEXT (0, 0), (293, 200) */
    -- GNC Orchestrator for the VEGA simulator

DCL gnc_output T_GNC_LV_SIM_INPUTS;

DCL gnc_input T_GNC_LV_SIM_CONTEXT;

DCL intr T_INTR;

DCL plot_data T_Plot;
dcl seq tastE_Peek_id_list := {1};

DCL major_cycle, sub_cycle T_UInt32;
    /* CIF ENDTEXT */
    /* CIF START (493, 377), (100, 45) */
    START;
        /* CIF TASK (457, 437), (172, 35) */
        TASK seq := seq // {2} // {1};
        /* CIF PROCEDURECALL (448, 487), (189, 50) */
        CALL writeln
('[Orchestrator] Startup');
        /* CIF TASK (471, 552), (144, 50) */
        TASK intr := obt_pulse4;
        /* CIF OUTPUT (478, 617), (130, 35) */
        OUTPUT telemetry;
        /* CIF TASK (471, 667), (144, 50) */
        TASK major_cycle := 1,
sub_cycle := 0;
        /* CIF NEXTSTATE (484, 732), (118, 50) */
        NEXTSTATE Wait_for_GUI;
    /* CIF STATE (1279, 201), (100, 50) */
    STATE Running;
        /* CIF INPUT (1533, 271), (136, 50) */
        INPUT start_simulation
(gnc_input)
        /* CIF COMMENT (1691, 271), (169, 50) */
        COMMENT 'Input from gui
stops the simulation';
            /* CIF NEXTSTATE (1542, 336), (118, 50) */
            NEXTSTATE Wait_for_GUI;
        /* CIF INPUT (1088, 271), (105, 50) */
        INPUT pulse
        /* CIF COMMENT (1213, 271), (114, 50) */
        COMMENT 'Periodic call';
            /* CIF PROCEDURECALL (944, 336), (393, 50) */
            CALL S_SET_GNC_LV_SIM_CONTEXT_FOR_NEXT_MAJOR_CYCLE
(gnc_input)
            /* CIF COMMENT (1355, 327), (173, 72) */
            COMMENT 'Set data computed
by the Simulink model
(Simulator) in the GNC
input vector';
            /* CIF PROCEDURECALL (1090, 401), (100, 50) */
            CALL Scheduler
(intr)
            /* CIF COMMENT (1211, 401), (170, 50) */
            COMMENT 'Call the GNC function';
            /* CIF PROCEDURECALL (950, 466), (380, 50) */
            CALL S_GET_GNC_LV_SIM_INPUTS_FOR_NEXT_MAJOR_CYCLE
(gnc_output)
            /* CIF COMMENT (1352, 466), (175, 50) */
            COMMENT 'Read output data
from the GNC function';
            /* CIF PROCEDURECALL (1049, 531), (183, 50) */
            CALL VESAT_Simulation_Step
(gnc_output, gnc_input)
            /* CIF COMMENT (1253, 531), (182, 50) */
            COMMENT 'Call the Simulink model';
            /* CIF DECISION (1047, 596), (187, 115) */
            DECISION major_cycle mod 50 = 0
and
sub_cycle = 0
            /* CIF COMMENT (1254, 628), (250, 50) */
            COMMENT 'Plot only every 50 major cycles
(otherwise performance is too low)';
                    /* CIF ANSWER (1031, 731), (100, 35) */
                    (true):
                        /* CIF TASK (943, 781), (276, 72) */
                        TASK plot_data!major_cycle := major_cycle,
plot_data!subcycle := sub_cycle mod 7,
plot_data!gnc_inputs := gnc_input,
plot_data!gnc_outputs := gnc_output;
                        /* CIF OUTPUT (1001, 868), (159, 50) */
                        OUTPUT plot(plot_data);
                    /* CIF ANSWER (1226, 731), (100, 35) */
                    (false):
            ENDDECISION;
            /* CIF DECISION (1081, 933), (118, 70) */
            DECISION sub_cycle = 7
            /* CIF COMMENT (1220, 943), (199, 50) */
            COMMENT 'Compute next major cycle';
                    /* CIF ANSWER (942, 1023), (100, 35) */
                    (true):
                        /* CIF TASK (850, 1073), (283, 53) */
                        TASK sub_cycle := 0,
major_cycle := (major_cycle + 1) mod 100;
                        /* CIF PROCEDURECALL (867, 1141), (249, 50) */
                        CALL S_JUMP_TO_NEXT_MAJOR_CYCLE;
                    /* CIF ANSWER (1222, 1023), (100, 35) */
                    (false):
                        /* CIF TASK (1143, 1073), (257, 50) */
                        TASK sub_cycle := (sub_cycle + 1) mod 100;
            ENDDECISION;
            /* CIF NEXTSTATE (1090, 1206), (100, 50) */
            NEXTSTATE Running;
    ENDSTATE;
    /* CIF STATE (683, 222), (118, 50) */
    STATE Wait_for_GUI;
        /* CIF INPUT (675, 292), (136, 50) */
        INPUT start_simulation
(gnc_input);
            /* CIF PROCEDURECALL (646, 357), (193, 50) */
            CALL writeln
('[Orchestrator] Running');
            /* CIF NEXTSTATE (693, 422), (100, 50) */
            NEXTSTATE Running;
    ENDSTATE;
ENDPROCESS orchestrator;