-- Code automatically generated by asn1scc tool
WITH adaasn1rtl;
USE adaasn1rtl;
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
--# inherit ;


PACKAGE TASTE_Dataview with SPARK_Mode
IS


SUBTYPE Boolean is adaasn1rtl.Asn1Boolean;


function Boolean_Equal(val1, val2: in Boolean) return Boolean;

function Boolean_Init return Boolean;

ERR_BOOLEAN:CONSTANT INTEGER := 1; -- 
FUNCTION Boolean_IsConstraintValid(val : in Boolean) return adaasn1rtl.ASN1_RESULT;
SUBTYPE Integer is adaasn1rtl.Asn1Int range -9223372036854775808 .. 9223372036854775807;


function Integer_Equal(val1, val2: in Integer) return Boolean;

function Integer_Init return Integer;

ERR_INTEGER:CONSTANT INTEGER := 8; -- 
FUNCTION Integer_IsConstraintValid(val : in Integer) return adaasn1rtl.ASN1_RESULT;
-- IntegerSeqOf --------------------------------------------
SUBTYPE IntegerSeqOf_index is integer range 1..32;
TYPE IntegerSeqOf_array IS ARRAY (IntegerSeqOf_index) OF Integer;
SUBTYPE IntegerSeqOf_length_index is integer range 1..32;
TYPE IntegerSeqOf IS  RECORD
    Length : IntegerSeqOf_length_index;
    Data  : IntegerSeqOf_array;
END RECORD;

function IntegerSeqOf_Equal(val1, val2: in IntegerSeqOf) return Boolean;

function IntegerSeqOf_Init return IntegerSeqOf;

ERR_INTEGERSEQOF_ELM:CONSTANT INTEGER := 29; 
ERR_INTEGERSEQOF:CONSTANT INTEGER := 40; 
FUNCTION IntegerSeqOf_IsConstraintValid(val : in IntegerSeqOf) return adaasn1rtl.ASN1_RESULT;
SUBTYPE Real is adaasn1rtl.Asn1Real;


function Real_Equal(val1, val2: in Real) return Boolean;

function Real_Init return Real;

ERR_REAL:CONSTANT INTEGER := 15; -- 
FUNCTION Real_IsConstraintValid(val : in Real) return adaasn1rtl.ASN1_RESULT;
SUBTYPE CharString_index is integer range 1..100;
SUBTYPE CharString_array IS adaasn1rtl.OctetBuffer(CharString_index);
SUBTYPE CharString_length_index is integer range 0..100;
TYPE CharString IS  RECORD
    Length : CharString_length_index;
    Data  : CharString_array;
END RECORD;

function CharString_Equal(val1, val2: in CharString) return Boolean;

function CharString_Init return CharString;

ERR_CHARSTRING:CONSTANT INTEGER := 22; -- 
FUNCTION CharString_IsConstraintValid(val : in CharString) return adaasn1rtl.ASN1_RESULT;

 

private
   --# hide TASTE_Dataview;


END TASTE_Dataview;