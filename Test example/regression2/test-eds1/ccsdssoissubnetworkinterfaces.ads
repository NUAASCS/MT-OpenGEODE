-- Code automatically generated by asn1scc tool
WITH adaasn1rtl;
USE adaasn1rtl;
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
WITH Demo; use Demo;
WITH CcsdsSoisSubnetwork; use CcsdsSoisSubnetwork;
--# inherit Demo,CcsdsSoisSubnetwork;


PACKAGE CcsdsSoisSubnetworkInterfaces with SPARK_Mode
IS


-- MASInterfaceTypeUpType --------------------------------------------
-- MASInterfaceTypeUpType_replyToCommand --------------------------------------------
-- MASInterfaceTypeUpType_replyToCommand_readExtendedstatusormodetype --------------------------------------------

TYPE MASInterfaceTypeUpType_replyToCommand_readExtendedstatusormodetype IS RECORD 
    data_value : Demo.ExtendedStatusOrModeTypeT;
END RECORD;
-- MASInterfaceTypeUpType_replyToCommand_readStatustype --------------------------------------------

TYPE MASInterfaceTypeUpType_replyToCommand_readStatustype IS RECORD 
    data_value : Demo.StatusTypeT;
END RECORD;
-- MASInterfaceTypeUpType_replyToCommand_write --------------------------------------------

TYPE MASInterfaceTypeUpType_replyToCommand_write IS RECORD 
    null;
END RECORD;

SUBTYPE MASInterfaceTypeUpType_replyToCommand_index_range is integer range 0..2;

TYPE MASInterfaceTypeUpType_replyToCommand_selection IS (replyToCommand_readExtendedstatusormodetype_PRESENT, replyToCommand_readStatustype_PRESENT, replyToCommand_write_PRESENT);
for MASInterfaceTypeUpType_replyToCommand_selection use
    (replyToCommand_readExtendedstatusormodetype_PRESENT => 1, replyToCommand_readStatustype_PRESENT => 2, replyToCommand_write_PRESENT => 3);
for MASInterfaceTypeUpType_replyToCommand_selection'Size use 32;

TYPE MASInterfaceTypeUpType_replyToCommand(kind : MASInterfaceTypeUpType_replyToCommand_selection:= replyToCommand_readExtendedstatusormodetype_PRESENT) IS 
RECORD
    case kind is
    when replyToCommand_readExtendedstatusormodetype_PRESENT =>
            readExtendedstatusormodetype: MASInterfaceTypeUpType_replyToCommand_readExtendedstatusormodetype;
    when replyToCommand_readStatustype_PRESENT =>
            readStatustype: MASInterfaceTypeUpType_replyToCommand_readStatustype;
    when replyToCommand_write_PRESENT =>
            write: MASInterfaceTypeUpType_replyToCommand_write;
    end case;
END RECORD;

FOR MASInterfaceTypeUpType_replyToCommand USE 
RECORD
    kind AT 0 RANGE 0..31;
END RECORD;

SUBTYPE MASInterfaceTypeUpType_index_range is integer range 0..0;

TYPE MASInterfaceTypeUpType_selection IS (MASInterfaceTypeUpType_replyToCommand_PRESENT);
for MASInterfaceTypeUpType_selection use
    (MASInterfaceTypeUpType_replyToCommand_PRESENT => 1);
for MASInterfaceTypeUpType_selection'Size use 32;

TYPE MASInterfaceTypeUpType(kind : MASInterfaceTypeUpType_selection:= MASInterfaceTypeUpType_replyToCommand_PRESENT) IS 
RECORD
    case kind is
    when MASInterfaceTypeUpType_replyToCommand_PRESENT =>
            replyToCommand: MASInterfaceTypeUpType_replyToCommand;
    end case;
END RECORD;

FOR MASInterfaceTypeUpType USE 
RECORD
    kind AT 0 RANGE 0..31;
END RECORD;

function MASInterfaceTypeUpType_replyToCommand_readExtendedstatusormodetype_Equal(val1, val2: in MASInterfaceTypeUpType_replyToCommand_readExtendedstatusormodetype) return Boolean;

function MASInterfaceTypeUpType_replyToCommand_readStatustype_Equal(val1, val2: in MASInterfaceTypeUpType_replyToCommand_readStatustype) return Boolean;

function MASInterfaceTypeUpType_replyToCommand_write_Equal(val1, val2: in MASInterfaceTypeUpType_replyToCommand_write) return Boolean;

function MASInterfaceTypeUpType_replyToCommand_Equal(val1, val2: in MASInterfaceTypeUpType_replyToCommand) return Boolean;

function MASInterfaceTypeUpType_Equal(val1, val2: in MASInterfaceTypeUpType) return Boolean;

function MASInterfaceTypeUpType_replyToCommand_readExtendedstatusormodetype_Init return MASInterfaceTypeUpType_replyToCommand_readExtendedstatusormodetype;
function MASInterfaceTypeUpType_replyToCommand_readStatustype_Init return MASInterfaceTypeUpType_replyToCommand_readStatustype;
function MASInterfaceTypeUpType_replyToCommand_write_Init return MASInterfaceTypeUpType_replyToCommand_write;
function MASInterfaceTypeUpType_replyToCommand_Init return MASInterfaceTypeUpType_replyToCommand;
function MASInterfaceTypeUpType_Init return MASInterfaceTypeUpType;

ERR_MASINTERFACETYPEUPTYPE:CONSTANT INTEGER := 255; 
ERR_MASINTERFACETYPEUPTYPE_REPLYTOCOMMAND:CONSTANT INTEGER := 248; 
ERR_MASINTERFACETYPEUPTYPE_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_QUERYCOUNT:CONSTANT INTEGER := 117; 
ERR_MASINTERFACETYPEUPTYPE_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_BODY_CHOICE:CONSTANT INTEGER := 170; 
ERR_MASINTERFACETYPEUPTYPE_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_BODY_CHOICE_MODE_MODE:CONSTANT INTEGER := 128; 
ERR_MASINTERFACETYPEUPTYPE_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_BODY_CHOICE_STATUS_STATUS:CONSTANT INTEGER := 149; 
ERR_MASINTERFACETYPEUPTYPE_REPLYTOCOMMAND_READSTATUSTYPE_DATA_VALUE_STATUSFLAG1:CONSTANT INTEGER := 193; 
ERR_MASINTERFACETYPEUPTYPE_REPLYTOCOMMAND_READSTATUSTYPE_DATA_VALUE_STATUSFLAG2:CONSTANT INTEGER := 204; 
ERR_MASINTERFACETYPEUPTYPE_REPLYTOCOMMAND_READSTATUSTYPE_DATA_VALUE_OPCOUNT:CONSTANT INTEGER := 215; 
FUNCTION MASInterfaceTypeUpType_IsConstraintValid(val : in MASInterfaceTypeUpType) return adaasn1rtl.ASN1_RESULT;
-- PSInterfaceTypeDownType --------------------------------------------
-- PSInterfaceTypeDownType_sendCommand --------------------------------------------
-- PSInterfaceTypeDownType_sendCommand_send --------------------------------------------

TYPE PSInterfaceTypeDownType_sendCommand_send IS RECORD 
    data_value : Demo.TelecommandTypeT;
END RECORD;

SUBTYPE PSInterfaceTypeDownType_sendCommand_index_range is integer range 0..0;

TYPE PSInterfaceTypeDownType_sendCommand_selection IS (send_PRESENT);
for PSInterfaceTypeDownType_sendCommand_selection use
    (send_PRESENT => 1);
for PSInterfaceTypeDownType_sendCommand_selection'Size use 32;

TYPE PSInterfaceTypeDownType_sendCommand(kind : PSInterfaceTypeDownType_sendCommand_selection:= send_PRESENT) IS 
RECORD
    case kind is
    when send_PRESENT =>
            send: PSInterfaceTypeDownType_sendCommand_send;
    end case;
END RECORD;

FOR PSInterfaceTypeDownType_sendCommand USE 
RECORD
    kind AT 0 RANGE 0..31;
END RECORD;

SUBTYPE PSInterfaceTypeDownType_index_range is integer range 0..0;

TYPE PSInterfaceTypeDownType_selection IS (PSInterfaceTypeDownType_sendCommand_PRESENT);
for PSInterfaceTypeDownType_selection use
    (PSInterfaceTypeDownType_sendCommand_PRESENT => 1);
for PSInterfaceTypeDownType_selection'Size use 32;

TYPE PSInterfaceTypeDownType(kind : PSInterfaceTypeDownType_selection:= PSInterfaceTypeDownType_sendCommand_PRESENT) IS 
RECORD
    case kind is
    when PSInterfaceTypeDownType_sendCommand_PRESENT =>
            sendCommand: PSInterfaceTypeDownType_sendCommand;
    end case;
END RECORD;

FOR PSInterfaceTypeDownType USE 
RECORD
    kind AT 0 RANGE 0..31;
END RECORD;

function PSInterfaceTypeDownType_sendCommand_send_Equal(val1, val2: in PSInterfaceTypeDownType_sendCommand_send) return Boolean;

function PSInterfaceTypeDownType_sendCommand_Equal(val1, val2: in PSInterfaceTypeDownType_sendCommand) return Boolean;

function PSInterfaceTypeDownType_Equal(val1, val2: in PSInterfaceTypeDownType) return Boolean;

function PSInterfaceTypeDownType_sendCommand_send_Init return PSInterfaceTypeDownType_sendCommand_send;
function PSInterfaceTypeDownType_sendCommand_Init return PSInterfaceTypeDownType_sendCommand;
function PSInterfaceTypeDownType_Init return PSInterfaceTypeDownType;

ERR_PSINTERFACETYPEDOWNTYPE:CONSTANT INTEGER := 849; 
ERR_PSINTERFACETYPEDOWNTYPE_SENDCOMMAND:CONSTANT INTEGER := 842; 
ERR_PSINTERFACETYPEDOWNTYPE_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE:CONSTANT INTEGER := 819; 
ERR_PSINTERFACETYPEDOWNTYPE_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE_MODE_MODE:CONSTANT INTEGER := 770; 
ERR_PSINTERFACETYPEDOWNTYPE_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE_USERDATA_USERDATA_ELM:CONSTANT INTEGER := 791; 
ERR_PSINTERFACETYPEDOWNTYPE_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE_USERDATA_USERDATA:CONSTANT INTEGER := 802; 
FUNCTION PSInterfaceTypeDownType_IsConstraintValid(val : in PSInterfaceTypeDownType) return adaasn1rtl.ASN1_RESULT;
-- PSInterfaceTypeUpType --------------------------------------------
-- PSInterfaceTypeUpType_replyToCommand --------------------------------------------
-- PSInterfaceTypeUpType_replyToCommand_receive --------------------------------------------

TYPE PSInterfaceTypeUpType_replyToCommand_receive IS RECORD 
    data_value : Demo.TelemetryTypeT;
END RECORD;

SUBTYPE PSInterfaceTypeUpType_replyToCommand_index_range is integer range 0..0;

TYPE PSInterfaceTypeUpType_replyToCommand_selection IS (receive_PRESENT);
for PSInterfaceTypeUpType_replyToCommand_selection use
    (receive_PRESENT => 1);
for PSInterfaceTypeUpType_replyToCommand_selection'Size use 32;

TYPE PSInterfaceTypeUpType_replyToCommand(kind : PSInterfaceTypeUpType_replyToCommand_selection:= receive_PRESENT) IS 
RECORD
    case kind is
    when receive_PRESENT =>
            receive: PSInterfaceTypeUpType_replyToCommand_receive;
    end case;
END RECORD;

FOR PSInterfaceTypeUpType_replyToCommand USE 
RECORD
    kind AT 0 RANGE 0..31;
END RECORD;

SUBTYPE PSInterfaceTypeUpType_index_range is integer range 0..0;

TYPE PSInterfaceTypeUpType_selection IS (PSInterfaceTypeUpType_replyToCommand_PRESENT);
for PSInterfaceTypeUpType_selection use
    (PSInterfaceTypeUpType_replyToCommand_PRESENT => 1);
for PSInterfaceTypeUpType_selection'Size use 32;

TYPE PSInterfaceTypeUpType(kind : PSInterfaceTypeUpType_selection:= PSInterfaceTypeUpType_replyToCommand_PRESENT) IS 
RECORD
    case kind is
    when PSInterfaceTypeUpType_replyToCommand_PRESENT =>
            replyToCommand: PSInterfaceTypeUpType_replyToCommand;
    end case;
END RECORD;

FOR PSInterfaceTypeUpType USE 
RECORD
    kind AT 0 RANGE 0..31;
END RECORD;

function PSInterfaceTypeUpType_replyToCommand_receive_Equal(val1, val2: in PSInterfaceTypeUpType_replyToCommand_receive) return Boolean;

function PSInterfaceTypeUpType_replyToCommand_Equal(val1, val2: in PSInterfaceTypeUpType_replyToCommand) return Boolean;

function PSInterfaceTypeUpType_Equal(val1, val2: in PSInterfaceTypeUpType) return Boolean;

function PSInterfaceTypeUpType_replyToCommand_receive_Init return PSInterfaceTypeUpType_replyToCommand_receive;
function PSInterfaceTypeUpType_replyToCommand_Init return PSInterfaceTypeUpType_replyToCommand;
function PSInterfaceTypeUpType_Init return PSInterfaceTypeUpType;

ERR_PSINTERFACETYPEUPTYPE:CONSTANT INTEGER := 1023; 
ERR_PSINTERFACETYPEUPTYPE_REPLYTOCOMMAND:CONSTANT INTEGER := 1016; 
ERR_PSINTERFACETYPEUPTYPE_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE:CONSTANT INTEGER := 993; 
ERR_PSINTERFACETYPEUPTYPE_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_ACK_STATUS:CONSTANT INTEGER := 856; 
ERR_PSINTERFACETYPEUPTYPE_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE1_TELEMETRYSET_HK1:CONSTANT INTEGER := 877; 
ERR_PSINTERFACETYPEUPTYPE_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE1_TELEMETRYSET_HK2:CONSTANT INTEGER := 888; 
ERR_PSINTERFACETYPEUPTYPE_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE2_TELEMETRYSET_HK3:CONSTANT INTEGER := 919; 
ERR_PSINTERFACETYPEUPTYPE_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE2_TELEMETRYSET_HK4:CONSTANT INTEGER := 930; 
ERR_PSINTERFACETYPEUPTYPE_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_EVENT_EVENTTYPE:CONSTANT INTEGER := 961; 
ERR_PSINTERFACETYPEUPTYPE_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_EVENT_EVENTDATA:CONSTANT INTEGER := 972; 
FUNCTION PSInterfaceTypeUpType_IsConstraintValid(val : in PSInterfaceTypeUpType) return adaasn1rtl.ASN1_RESULT;
-- PSInterfaceTypeProviderType --------------------------------------------

TYPE PSInterfaceTypeProviderType IS RECORD 
    inputReady : adaasn1rtl.Asn1Boolean;
    inputData : PSInterfaceTypeDownType;
    outputData : PSInterfaceTypeUpType;
END RECORD;

function PSInterfaceTypeProviderType_Equal(val1, val2: in PSInterfaceTypeProviderType) return Boolean;

function PSInterfaceTypeProviderType_Init return PSInterfaceTypeProviderType;

ERR_PSINTERFACETYPEPROVIDERTYPE_INPUTREADY:CONSTANT INTEGER := 1030; 
ERR_PSINTERFACETYPEPROVIDERTYPE_INPUTDATA:CONSTANT INTEGER := 1116; 
ERR_PSINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND:CONSTANT INTEGER := 1109; 
ERR_PSINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE:CONSTANT INTEGER := 1086; 
ERR_PSINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE_MODE_MODE:CONSTANT INTEGER := 1037; 
ERR_PSINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE_USERDATA_USERDATA_ELM:CONSTANT INTEGER := 1058; 
ERR_PSINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE_USERDATA_USERDATA:CONSTANT INTEGER := 1069; 
ERR_PSINTERFACETYPEPROVIDERTYPE_OUTPUTDATA:CONSTANT INTEGER := 1294; 
ERR_PSINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND:CONSTANT INTEGER := 1287; 
ERR_PSINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE:CONSTANT INTEGER := 1264; 
ERR_PSINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_ACK_STATUS:CONSTANT INTEGER := 1127; 
ERR_PSINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE1_TELEMETRYSET_HK1:CONSTANT INTEGER := 1148; 
ERR_PSINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE1_TELEMETRYSET_HK2:CONSTANT INTEGER := 1159; 
ERR_PSINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE2_TELEMETRYSET_HK3:CONSTANT INTEGER := 1190; 
ERR_PSINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE2_TELEMETRYSET_HK4:CONSTANT INTEGER := 1201; 
ERR_PSINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_EVENT_EVENTTYPE:CONSTANT INTEGER := 1232; 
ERR_PSINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_EVENT_EVENTDATA:CONSTANT INTEGER := 1243; 
FUNCTION PSInterfaceTypeProviderType_IsConstraintValid(val : in PSInterfaceTypeProviderType) return adaasn1rtl.ASN1_RESULT;
-- PSInterfaceTypeClientType --------------------------------------------

TYPE PSInterfaceTypeClientType IS RECORD 
    inputReady : adaasn1rtl.Asn1Boolean;
    inputData : PSInterfaceTypeUpType;
    outputData : PSInterfaceTypeDownType;
END RECORD;

function PSInterfaceTypeClientType_Equal(val1, val2: in PSInterfaceTypeClientType) return Boolean;

function PSInterfaceTypeClientType_Init return PSInterfaceTypeClientType;

ERR_PSINTERFACETYPECLIENTTYPE_INPUTREADY:CONSTANT INTEGER := 1311; 
ERR_PSINTERFACETYPECLIENTTYPE_INPUTDATA:CONSTANT INTEGER := 1485; 
ERR_PSINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND:CONSTANT INTEGER := 1478; 
ERR_PSINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE:CONSTANT INTEGER := 1455; 
ERR_PSINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_ACK_STATUS:CONSTANT INTEGER := 1318; 
ERR_PSINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE1_TELEMETRYSET_HK1:CONSTANT INTEGER := 1339; 
ERR_PSINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE1_TELEMETRYSET_HK2:CONSTANT INTEGER := 1350; 
ERR_PSINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE2_TELEMETRYSET_HK3:CONSTANT INTEGER := 1381; 
ERR_PSINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_TYPE2_TELEMETRYSET_HK4:CONSTANT INTEGER := 1392; 
ERR_PSINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_EVENT_EVENTTYPE:CONSTANT INTEGER := 1423; 
ERR_PSINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_RECEIVE_DATA_VALUE_BODY_CHOICE_EVENT_EVENTDATA:CONSTANT INTEGER := 1434; 
ERR_PSINTERFACETYPECLIENTTYPE_OUTPUTDATA:CONSTANT INTEGER := 1575; 
ERR_PSINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND:CONSTANT INTEGER := 1568; 
ERR_PSINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE:CONSTANT INTEGER := 1545; 
ERR_PSINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE_MODE_MODE:CONSTANT INTEGER := 1496; 
ERR_PSINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE_USERDATA_USERDATA_ELM:CONSTANT INTEGER := 1517; 
ERR_PSINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND_SEND_DATA_VALUE_BODY_CHOICE_USERDATA_USERDATA:CONSTANT INTEGER := 1528; 
FUNCTION PSInterfaceTypeClientType_IsConstraintValid(val : in PSInterfaceTypeClientType) return adaasn1rtl.ASN1_RESULT;
-- MASInterfaceTypeDownType --------------------------------------------
-- MASInterfaceTypeDownType_sendCommand --------------------------------------------
-- MASInterfaceTypeDownType_sendCommand_readExtendedstatusormodetype --------------------------------------------

TYPE MASInterfaceTypeDownType_sendCommand_readExtendedstatusormodetype IS RECORD 
    null;
END RECORD;
-- MASInterfaceTypeDownType_sendCommand_readStatustype --------------------------------------------

TYPE MASInterfaceTypeDownType_sendCommand_readStatustype IS RECORD 
    null;
END RECORD;
-- MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite --------------------------------------------
SUBTYPE MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryID is CcsdsSoisSubnetwork.MemoryIDTypeT range 0 .. 0;

SUBTYPE MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryAddress is CcsdsSoisSubnetwork.MemoryAddressTypeT range 100 .. 100;


TYPE MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite IS RECORD 
    memoryID : MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryID;
    memoryAddress : MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryAddress;
    data_value : Demo.ReadStatusModeCommandTypeT;
END RECORD;
-- MASInterfaceTypeDownType_sendCommand_write --------------------------------------------
SUBTYPE MASInterfaceTypeDownType_sendCommand_write_memoryID is CcsdsSoisSubnetwork.MemoryIDTypeT range 0 .. 0;

SUBTYPE MASInterfaceTypeDownType_sendCommand_write_memoryAddress is CcsdsSoisSubnetwork.MemoryAddressTypeT range 100 .. 100;


TYPE MASInterfaceTypeDownType_sendCommand_write IS RECORD 
    memoryID : MASInterfaceTypeDownType_sendCommand_write_memoryID;
    memoryAddress : MASInterfaceTypeDownType_sendCommand_write_memoryAddress;
    data_value : Demo.ReadStatusModeCommandTypeT;
END RECORD;

SUBTYPE MASInterfaceTypeDownType_sendCommand_index_range is integer range 0..3;

TYPE MASInterfaceTypeDownType_sendCommand_selection IS (sendCommand_readExtendedstatusormodetype_PRESENT, sendCommand_readStatustype_PRESENT, unacknowledgedWrite_PRESENT, sendCommand_write_PRESENT);
for MASInterfaceTypeDownType_sendCommand_selection use
    (sendCommand_readExtendedstatusormodetype_PRESENT => 1, sendCommand_readStatustype_PRESENT => 2, unacknowledgedWrite_PRESENT => 3, sendCommand_write_PRESENT => 4);
for MASInterfaceTypeDownType_sendCommand_selection'Size use 32;

TYPE MASInterfaceTypeDownType_sendCommand(kind : MASInterfaceTypeDownType_sendCommand_selection:= sendCommand_readExtendedstatusormodetype_PRESENT) IS 
RECORD
    case kind is
    when sendCommand_readExtendedstatusormodetype_PRESENT =>
            readExtendedstatusormodetype: MASInterfaceTypeDownType_sendCommand_readExtendedstatusormodetype;
    when sendCommand_readStatustype_PRESENT =>
            readStatustype: MASInterfaceTypeDownType_sendCommand_readStatustype;
    when unacknowledgedWrite_PRESENT =>
            unacknowledgedWrite: MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite;
    when sendCommand_write_PRESENT =>
            write: MASInterfaceTypeDownType_sendCommand_write;
    end case;
END RECORD;

FOR MASInterfaceTypeDownType_sendCommand USE 
RECORD
    kind AT 0 RANGE 0..31;
END RECORD;

SUBTYPE MASInterfaceTypeDownType_index_range is integer range 0..0;

TYPE MASInterfaceTypeDownType_selection IS (MASInterfaceTypeDownType_sendCommand_PRESENT);
for MASInterfaceTypeDownType_selection use
    (MASInterfaceTypeDownType_sendCommand_PRESENT => 1);
for MASInterfaceTypeDownType_selection'Size use 32;

TYPE MASInterfaceTypeDownType(kind : MASInterfaceTypeDownType_selection:= MASInterfaceTypeDownType_sendCommand_PRESENT) IS 
RECORD
    case kind is
    when MASInterfaceTypeDownType_sendCommand_PRESENT =>
            sendCommand: MASInterfaceTypeDownType_sendCommand;
    end case;
END RECORD;

FOR MASInterfaceTypeDownType USE 
RECORD
    kind AT 0 RANGE 0..31;
END RECORD;

function MASInterfaceTypeDownType_sendCommand_readExtendedstatusormodetype_Equal(val1, val2: in MASInterfaceTypeDownType_sendCommand_readExtendedstatusormodetype) return Boolean;

function MASInterfaceTypeDownType_sendCommand_readStatustype_Equal(val1, val2: in MASInterfaceTypeDownType_sendCommand_readStatustype) return Boolean;

function MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryID_Equal(val1, val2: in MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryID) return Boolean;

function MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryAddress_Equal(val1, val2: in MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryAddress) return Boolean;

function MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_Equal(val1, val2: in MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite) return Boolean;

function MASInterfaceTypeDownType_sendCommand_write_memoryID_Equal(val1, val2: in MASInterfaceTypeDownType_sendCommand_write_memoryID) return Boolean;

function MASInterfaceTypeDownType_sendCommand_write_memoryAddress_Equal(val1, val2: in MASInterfaceTypeDownType_sendCommand_write_memoryAddress) return Boolean;

function MASInterfaceTypeDownType_sendCommand_write_Equal(val1, val2: in MASInterfaceTypeDownType_sendCommand_write) return Boolean;

function MASInterfaceTypeDownType_sendCommand_Equal(val1, val2: in MASInterfaceTypeDownType_sendCommand) return Boolean;

function MASInterfaceTypeDownType_Equal(val1, val2: in MASInterfaceTypeDownType) return Boolean;

function MASInterfaceTypeDownType_sendCommand_readExtendedstatusormodetype_Init return MASInterfaceTypeDownType_sendCommand_readExtendedstatusormodetype;
function MASInterfaceTypeDownType_sendCommand_readStatustype_Init return MASInterfaceTypeDownType_sendCommand_readStatustype;
function MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryID_Init return MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryID;
function MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryAddress_Init return MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_memoryAddress;
function MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite_Init return MASInterfaceTypeDownType_sendCommand_unacknowledgedWrite;
function MASInterfaceTypeDownType_sendCommand_write_memoryID_Init return MASInterfaceTypeDownType_sendCommand_write_memoryID;
function MASInterfaceTypeDownType_sendCommand_write_memoryAddress_Init return MASInterfaceTypeDownType_sendCommand_write_memoryAddress;
function MASInterfaceTypeDownType_sendCommand_write_Init return MASInterfaceTypeDownType_sendCommand_write;
function MASInterfaceTypeDownType_sendCommand_Init return MASInterfaceTypeDownType_sendCommand;
function MASInterfaceTypeDownType_Init return MASInterfaceTypeDownType;

ERR_MASINTERFACETYPEDOWNTYPE:CONSTANT INTEGER := 110; 
ERR_MASINTERFACETYPEDOWNTYPE_SENDCOMMAND:CONSTANT INTEGER := 103; 
ERR_MASINTERFACETYPEDOWNTYPE_SENDCOMMAND_UNACKNOWLEDGEDWRITE_MEMORYID:CONSTANT INTEGER := 41; 
ERR_MASINTERFACETYPEDOWNTYPE_SENDCOMMAND_UNACKNOWLEDGEDWRITE_MEMORYADDRESS:CONSTANT INTEGER := 48; 
ERR_MASINTERFACETYPEDOWNTYPE_SENDCOMMAND_UNACKNOWLEDGEDWRITE_DATA_VALUE:CONSTANT INTEGER := 55; 
ERR_MASINTERFACETYPEDOWNTYPE_SENDCOMMAND_WRITE_MEMORYID:CONSTANT INTEGER := 72; 
ERR_MASINTERFACETYPEDOWNTYPE_SENDCOMMAND_WRITE_MEMORYADDRESS:CONSTANT INTEGER := 79; 
ERR_MASINTERFACETYPEDOWNTYPE_SENDCOMMAND_WRITE_DATA_VALUE:CONSTANT INTEGER := 86; 
FUNCTION MASInterfaceTypeDownType_IsConstraintValid(val : in MASInterfaceTypeDownType) return adaasn1rtl.ASN1_RESULT;
-- MASInterfaceTypeProviderType --------------------------------------------

TYPE MASInterfaceTypeProviderType IS RECORD 
    inputReady : adaasn1rtl.Asn1Boolean;
    inputData : MASInterfaceTypeDownType;
    outputData : MASInterfaceTypeUpType;
END RECORD;

function MASInterfaceTypeProviderType_Equal(val1, val2: in MASInterfaceTypeProviderType) return Boolean;

function MASInterfaceTypeProviderType_Init return MASInterfaceTypeProviderType;

ERR_MASINTERFACETYPEPROVIDERTYPE_INPUTREADY:CONSTANT INTEGER := 262; 
ERR_MASINTERFACETYPEPROVIDERTYPE_INPUTDATA:CONSTANT INTEGER := 350; 
ERR_MASINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND:CONSTANT INTEGER := 343; 
ERR_MASINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND_UNACKNOWLEDGEDWRITE_MEMORYID:CONSTANT INTEGER := 281; 
ERR_MASINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND_UNACKNOWLEDGEDWRITE_MEMORYADDRESS:CONSTANT INTEGER := 288; 
ERR_MASINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND_UNACKNOWLEDGEDWRITE_DATA_VALUE:CONSTANT INTEGER := 295; 
ERR_MASINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND_WRITE_MEMORYID:CONSTANT INTEGER := 312; 
ERR_MASINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND_WRITE_MEMORYADDRESS:CONSTANT INTEGER := 319; 
ERR_MASINTERFACETYPEPROVIDERTYPE_INPUTDATA_SENDCOMMAND_WRITE_DATA_VALUE:CONSTANT INTEGER := 326; 
ERR_MASINTERFACETYPEPROVIDERTYPE_OUTPUTDATA:CONSTANT INTEGER := 499; 
ERR_MASINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND:CONSTANT INTEGER := 492; 
ERR_MASINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_QUERYCOUNT:CONSTANT INTEGER := 361; 
ERR_MASINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_BODY_CHOICE:CONSTANT INTEGER := 414; 
ERR_MASINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_BODY_CHOICE_MODE_MODE:CONSTANT INTEGER := 372; 
ERR_MASINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_BODY_CHOICE_STATUS_STATUS:CONSTANT INTEGER := 393; 
ERR_MASINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_READSTATUSTYPE_DATA_VALUE_STATUSFLAG1:CONSTANT INTEGER := 437; 
ERR_MASINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_READSTATUSTYPE_DATA_VALUE_STATUSFLAG2:CONSTANT INTEGER := 448; 
ERR_MASINTERFACETYPEPROVIDERTYPE_OUTPUTDATA_REPLYTOCOMMAND_READSTATUSTYPE_DATA_VALUE_OPCOUNT:CONSTANT INTEGER := 459; 
FUNCTION MASInterfaceTypeProviderType_IsConstraintValid(val : in MASInterfaceTypeProviderType) return adaasn1rtl.ASN1_RESULT;
-- MASInterfaceTypeClientType --------------------------------------------

TYPE MASInterfaceTypeClientType IS RECORD 
    inputReady : adaasn1rtl.Asn1Boolean;
    inputData : MASInterfaceTypeUpType;
    outputData : MASInterfaceTypeDownType;
END RECORD;

function MASInterfaceTypeClientType_Equal(val1, val2: in MASInterfaceTypeClientType) return Boolean;

function MASInterfaceTypeClientType_Init return MASInterfaceTypeClientType;

ERR_MASINTERFACETYPECLIENTTYPE_INPUTREADY:CONSTANT INTEGER := 516; 
ERR_MASINTERFACETYPECLIENTTYPE_INPUTDATA:CONSTANT INTEGER := 661; 
ERR_MASINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND:CONSTANT INTEGER := 654; 
ERR_MASINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_QUERYCOUNT:CONSTANT INTEGER := 523; 
ERR_MASINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_BODY_CHOICE:CONSTANT INTEGER := 576; 
ERR_MASINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_BODY_CHOICE_MODE_MODE:CONSTANT INTEGER := 534; 
ERR_MASINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_READEXTENDEDSTATUSORMODETYPE_DATA_VALUE_BODY_CHOICE_STATUS_STATUS:CONSTANT INTEGER := 555; 
ERR_MASINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_READSTATUSTYPE_DATA_VALUE_STATUSFLAG1:CONSTANT INTEGER := 599; 
ERR_MASINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_READSTATUSTYPE_DATA_VALUE_STATUSFLAG2:CONSTANT INTEGER := 610; 
ERR_MASINTERFACETYPECLIENTTYPE_INPUTDATA_REPLYTOCOMMAND_READSTATUSTYPE_DATA_VALUE_OPCOUNT:CONSTANT INTEGER := 621; 
ERR_MASINTERFACETYPECLIENTTYPE_OUTPUTDATA:CONSTANT INTEGER := 753; 
ERR_MASINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND:CONSTANT INTEGER := 746; 
ERR_MASINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND_UNACKNOWLEDGEDWRITE_MEMORYID:CONSTANT INTEGER := 684; 
ERR_MASINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND_UNACKNOWLEDGEDWRITE_MEMORYADDRESS:CONSTANT INTEGER := 691; 
ERR_MASINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND_UNACKNOWLEDGEDWRITE_DATA_VALUE:CONSTANT INTEGER := 698; 
ERR_MASINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND_WRITE_MEMORYID:CONSTANT INTEGER := 715; 
ERR_MASINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND_WRITE_MEMORYADDRESS:CONSTANT INTEGER := 722; 
ERR_MASINTERFACETYPECLIENTTYPE_OUTPUTDATA_SENDCOMMAND_WRITE_DATA_VALUE:CONSTANT INTEGER := 729; 
FUNCTION MASInterfaceTypeClientType_IsConstraintValid(val : in MASInterfaceTypeClientType) return adaasn1rtl.ASN1_RESULT;

 

private
   --# hide CcsdsSoisSubnetworkInterfaces;


END CcsdsSoisSubnetworkInterfaces;