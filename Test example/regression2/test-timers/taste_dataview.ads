-- Code automatically generated by asn1scc tool
WITH adaasn1rtl;
USE adaasn1rtl;
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
--# inherit ;


PACKAGE TASTE_Dataview with SPARK_Mode
IS


SUBTYPE T_UInt32 is adaasn1rtl.Asn1UInt range 0 .. 65535;


function T_UInt32_Equal(val1, val2: in T_UInt32) return Boolean;

function T_UInt32_Init return T_UInt32;

ERR_T_UINT32:CONSTANT INTEGER := 1; -- 
FUNCTION T_UInt32_IsConstraintValid(val : in T_UInt32) return adaasn1rtl.ASN1_RESULT;
SUBTYPE Signed_Int is adaasn1rtl.Asn1Int range -1000 .. 1000;


function Signed_Int_Equal(val1, val2: in Signed_Int) return Boolean;

function Signed_Int_Init return Signed_Int;

ERR_SIGNED_INT:CONSTANT INTEGER := 8; -- 
FUNCTION Signed_Int_IsConstraintValid(val : in Signed_Int) return adaasn1rtl.ASN1_RESULT;
SUBTYPE Unsigned_Int is adaasn1rtl.Asn1UInt range 0 .. 100;


function Unsigned_Int_Equal(val1, val2: in Unsigned_Int) return Boolean;

function Unsigned_Int_Init return Unsigned_Int;

ERR_UNSIGNED_INT:CONSTANT INTEGER := 15; -- 
FUNCTION Unsigned_Int_IsConstraintValid(val : in Unsigned_Int) return adaasn1rtl.ASN1_RESULT;

 

private
   --# hide TASTE_Dataview;


END TASTE_Dataview;