-- Code automatically generated by asn1scc tool
WITH adaasn1rtl;
USE adaasn1rtl;
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
--# inherit ;


PACKAGE TASTE_Dataview with SPARK_Mode
IS


SUBTYPE BoolType is adaasn1rtl.Asn1Boolean;


function BoolType_Equal(val1, val2: in BoolType) return Boolean;

function BoolType_Init return BoolType;

ERR_BOOLTYPE:CONSTANT INTEGER := 19; -- 
FUNCTION BoolType_IsConstraintValid(val : in BoolType) return adaasn1rtl.ASN1_RESULT;
-- SeqOf --------------------------------------------
SUBTYPE SeqOf_index is integer range 1..10;
TYPE SeqOf_array IS ARRAY (SeqOf_index) OF BoolType;
SUBTYPE SeqOf_length_index is integer range 0..10;
TYPE SeqOf IS  RECORD
    Length : SeqOf_length_index;
    Data  : SeqOf_array;
END RECORD;

function SeqOf_Equal(val1, val2: in SeqOf) return Boolean;

function SeqOf_Init return SeqOf;

ERR_SEQOF_ELM:CONSTANT INTEGER := 1; 
ERR_SEQOF:CONSTANT INTEGER := 12; 
FUNCTION SeqOf_IsConstraintValid(val : in SeqOf) return adaasn1rtl.ASN1_RESULT;
SUBTYPE MyStr_index is integer range 1..1000;
SUBTYPE MyStr_array IS adaasn1rtl.OctetBuffer(MyStr_index);
SUBTYPE MyStr_length_index is integer range 3..1000;
TYPE MyStr IS  RECORD
    Length : MyStr_length_index;
    Data  : MyStr_array;
END RECORD;

function MyStr_Equal(val1, val2: in MyStr) return Boolean;

function MyStr_Init return MyStr;

ERR_MYSTR:CONSTANT INTEGER := 26; -- 
FUNCTION MyStr_IsConstraintValid(val : in MyStr) return adaasn1rtl.ASN1_RESULT;

 

private
   --# hide TASTE_Dataview;


END TASTE_Dataview;