-- Code automatically generated by asn1scc tool
WITH adaasn1rtl;
USE adaasn1rtl;
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
--# inherit ;


PACKAGE TASTE_Dataview with SPARK_Mode
IS


-- FCE_SIT_2 --------------------------------------------
SUBTYPE FCE_SIT_2_sc_conf_index_range is integer range 0..3;
TYPE FCE_SIT_2_sc_conf IS (mcsc, mcsa, mcso, mpo) with Convention => C;
for FCE_SIT_2_sc_conf use
    (mcsc => 0, mcsa => 1, mcso => 2, mpo => 3);

TYPE FCE_SIT_2 IS RECORD 
    is_sep_phase : adaasn1rtl.Asn1Boolean;
    sa_is_edge_on_sun_alwd : adaasn1rtl.Asn1Boolean;
    sc_conf : FCE_SIT_2_sc_conf;
END RECORD;

function FCE_SIT_2_sc_conf_Equal(val1, val2: in FCE_SIT_2_sc_conf) return Boolean;

function FCE_SIT_2_Equal(val1, val2: in FCE_SIT_2) return Boolean;

function FCE_SIT_2_sc_conf_Init return FCE_SIT_2_sc_conf;
function FCE_SIT_2_Init return FCE_SIT_2;

ERR_FCE_SIT_2_IS_SEP_PHASE:CONSTANT INTEGER := 896; 
ERR_FCE_SIT_2_SA_IS_EDGE_ON_SUN_ALWD:CONSTANT INTEGER := 903; 
ERR_FCE_SIT_2_SC_CONF:CONSTANT INTEGER := 910; 
FUNCTION FCE_SIT_2_IsConstraintValid(val : in FCE_SIT_2) return adaasn1rtl.ASN1_RESULT;
-- FCE_SIT_3 --------------------------------------------

TYPE FCE_SIT_3 IS RECORD 
    nothing : adaasn1rtl.Asn1Boolean;
END RECORD;

function FCE_SIT_3_Equal(val1, val2: in FCE_SIT_3) return Boolean;

function FCE_SIT_3_Init return FCE_SIT_3;

ERR_FCE_SIT_3_NOTHING:CONSTANT INTEGER := 923; 
FUNCTION FCE_SIT_3_IsConstraintValid(val : in FCE_SIT_3) return adaasn1rtl.ASN1_RESULT;
SUBTYPE A_or_B_index_range is integer range 0..1;
TYPE A_or_B IS (a, b) with Convention => C;
for A_or_B use
    (a => 0, b => 1);

function A_or_B_Equal(val1, val2: in A_or_B) return Boolean;

function A_or_B_Init return A_or_B;

ERR_A_OR_B:CONSTANT INTEGER := 1158; -- 
FUNCTION A_or_B_IsConstraintValid(val : in A_or_B) return adaasn1rtl.ASN1_RESULT;
-- IMU --------------------------------------------
SUBTYPE IMU_cnf_g is adaasn1rtl.Asn1UInt range 0 .. 100;


TYPE IMU IS RECORD 
    cnf_n : A_or_B;
    cnf_r : A_or_B;
    cnf_g : IMU_cnf_g;
END RECORD;

function IMU_cnf_g_Equal(val1, val2: in IMU_cnf_g) return Boolean;

function IMU_Equal(val1, val2: in IMU) return Boolean;

function IMU_cnf_g_Init return IMU_cnf_g;
function IMU_Init return IMU;

ERR_IMU_CNF_N:CONSTANT INTEGER := 967; 
ERR_IMU_CNF_R:CONSTANT INTEGER := 978; 
ERR_IMU_CNF_G:CONSTANT INTEGER := 989; 
FUNCTION IMU_IsConstraintValid(val : in IMU) return adaasn1rtl.ASN1_RESULT;
-- CPST_CNF --------------------------------------------

TYPE CPST_CNF IS RECORD 
    cpst1_cnf_n : A_or_B;
    cpst2_cnf_n : A_or_B;
    cpst1_cnf_r : A_or_B;
    cpst2_cnf_r : A_or_B;
END RECORD;

function CPST_CNF_Equal(val1, val2: in CPST_CNF) return Boolean;

function CPST_CNF_Init return CPST_CNF;

ERR_CPST_CNF_CPST1_CNF_N:CONSTANT INTEGER := 1002; 
ERR_CPST_CNF_CPST2_CNF_N:CONSTANT INTEGER := 1013; 
ERR_CPST_CNF_CPST1_CNF_R:CONSTANT INTEGER := 1024; 
ERR_CPST_CNF_CPST2_CNF_R:CONSTANT INTEGER := 1035; 
FUNCTION CPST_CNF_IsConstraintValid(val : in CPST_CNF) return adaasn1rtl.ASN1_RESULT;
-- SADT_CNF --------------------------------------------

TYPE SADT_CNF IS RECORD 
    cnf_n : A_or_B;
    cnf_r : A_or_B;
END RECORD;

function SADT_CNF_Equal(val1, val2: in SADT_CNF) return Boolean;

function SADT_CNF_Init return SADT_CNF;

ERR_SADT_CNF_CNF_N:CONSTANT INTEGER := 1052; 
ERR_SADT_CNF_CNF_R:CONSTANT INTEGER := 1063; 
FUNCTION SADT_CNF_IsConstraintValid(val : in SADT_CNF) return adaasn1rtl.ASN1_RESULT;
-- CPSP_CNF --------------------------------------------

TYPE CPSP_CNF IS RECORD 
    cpsp1_cnf_n : A_or_B;
    cpsp2_cnf_n : A_or_B;
    cpsp1_cnf_r : A_or_B;
    cpsp2_cnf_r : A_or_B;
END RECORD;

function CPSP_CNF_Equal(val1, val2: in CPSP_CNF) return Boolean;

function CPSP_CNF_Init return CPSP_CNF;

ERR_CPSP_CNF_CPSP1_CNF_N:CONSTANT INTEGER := 1080; 
ERR_CPSP_CNF_CPSP2_CNF_N:CONSTANT INTEGER := 1091; 
ERR_CPSP_CNF_CPSP1_CNF_R:CONSTANT INTEGER := 1102; 
ERR_CPSP_CNF_CPSP2_CNF_R:CONSTANT INTEGER := 1113; 
FUNCTION CPSP_CNF_IsConstraintValid(val : in CPSP_CNF) return adaasn1rtl.ASN1_RESULT;
-- SADP_CNF --------------------------------------------

TYPE SADP_CNF IS RECORD 
    cnf_n : A_or_B;
    cnf_r : A_or_B;
END RECORD;

function SADP_CNF_Equal(val1, val2: in SADP_CNF) return Boolean;

function SADP_CNF_Init return SADP_CNF;

ERR_SADP_CNF_CNF_N:CONSTANT INTEGER := 1130; 
ERR_SADP_CNF_CNF_R:CONSTANT INTEGER := 1141; 
FUNCTION SADP_CNF_IsConstraintValid(val : in SADP_CNF) return adaasn1rtl.ASN1_RESULT;
SUBTYPE D_or_X_index_range is integer range 0..1;
TYPE D_or_X IS (d, x) with Convention => C;
for D_or_X use
    (d => 0, x => 1);

function D_or_X_Equal(val1, val2: in D_or_X) return Boolean;

function D_or_X_Init return D_or_X;

ERR_D_OR_X:CONSTANT INTEGER := 1165; -- 
FUNCTION D_or_X_IsConstraintValid(val : in D_or_X) return adaasn1rtl.ASN1_RESULT;
-- FCE_SIT_1 --------------------------------------------

TYPE FCE_SIT_1 IS RECORD 
    imu_1 : IMU;
    imu_2 : IMU;
    riup_cnf_n : A_or_B;
    riup_cnf_r : A_or_B;
    riup_cnf_pwr_io_n : A_or_B;
    riup_cnf_pwr_io_r : A_or_B;
    spwr_cnf_n : D_or_X;
    spwr_cnf_r : D_or_X;
    rium_cnf_n : A_or_B;
    rium_cnf_r : A_or_B;
    rium_cnf_pwr_io_n : A_or_B;
    rium_cnf_pwr_io_r : A_or_B;
    cpst : CPST_CNF;
    sadt : SADT_CNF;
    cpsp : CPSP_CNF;
    sadp : SADP_CNF;
END RECORD;

function FCE_SIT_1_Equal(val1, val2: in FCE_SIT_1) return Boolean;

function FCE_SIT_1_Init return FCE_SIT_1;

ERR_FCE_SIT_1_IMU_1_CNF_N:CONSTANT INTEGER := 530; 
ERR_FCE_SIT_1_IMU_1_CNF_R:CONSTANT INTEGER := 541; 
ERR_FCE_SIT_1_IMU_1_CNF_G:CONSTANT INTEGER := 552; 
ERR_FCE_SIT_1_IMU_2_CNF_N:CONSTANT INTEGER := 569; 
ERR_FCE_SIT_1_IMU_2_CNF_R:CONSTANT INTEGER := 580; 
ERR_FCE_SIT_1_IMU_2_CNF_G:CONSTANT INTEGER := 591; 
ERR_FCE_SIT_1_RIUP_CNF_N:CONSTANT INTEGER := 608; 
ERR_FCE_SIT_1_RIUP_CNF_R:CONSTANT INTEGER := 619; 
ERR_FCE_SIT_1_RIUP_CNF_PWR_IO_N:CONSTANT INTEGER := 630; 
ERR_FCE_SIT_1_RIUP_CNF_PWR_IO_R:CONSTANT INTEGER := 641; 
ERR_FCE_SIT_1_SPWR_CNF_N:CONSTANT INTEGER := 652; 
ERR_FCE_SIT_1_SPWR_CNF_R:CONSTANT INTEGER := 663; 
ERR_FCE_SIT_1_RIUM_CNF_N:CONSTANT INTEGER := 674; 
ERR_FCE_SIT_1_RIUM_CNF_R:CONSTANT INTEGER := 685; 
ERR_FCE_SIT_1_RIUM_CNF_PWR_IO_N:CONSTANT INTEGER := 696; 
ERR_FCE_SIT_1_RIUM_CNF_PWR_IO_R:CONSTANT INTEGER := 707; 
ERR_FCE_SIT_1_CPST_CPST1_CNF_N:CONSTANT INTEGER := 718; 
ERR_FCE_SIT_1_CPST_CPST2_CNF_N:CONSTANT INTEGER := 729; 
ERR_FCE_SIT_1_CPST_CPST1_CNF_R:CONSTANT INTEGER := 740; 
ERR_FCE_SIT_1_CPST_CPST2_CNF_R:CONSTANT INTEGER := 751; 
ERR_FCE_SIT_1_SADT_CNF_N:CONSTANT INTEGER := 772; 
ERR_FCE_SIT_1_SADT_CNF_R:CONSTANT INTEGER := 783; 
ERR_FCE_SIT_1_CPSP_CPSP1_CNF_N:CONSTANT INTEGER := 804; 
ERR_FCE_SIT_1_CPSP_CPSP2_CNF_N:CONSTANT INTEGER := 815; 
ERR_FCE_SIT_1_CPSP_CPSP1_CNF_R:CONSTANT INTEGER := 826; 
ERR_FCE_SIT_1_CPSP_CPSP2_CNF_R:CONSTANT INTEGER := 837; 
ERR_FCE_SIT_1_SADP_CNF_N:CONSTANT INTEGER := 858; 
ERR_FCE_SIT_1_SADP_CNF_R:CONSTANT INTEGER := 869; 
FUNCTION FCE_SIT_1_IsConstraintValid(val : in FCE_SIT_1) return adaasn1rtl.ASN1_RESULT;
-- FCE_RECOVERY_STATUS_REGISTER --------------------------------------------

TYPE FCE_RECOVERY_STATUS_REGISTER IS RECORD 
    l2rec : adaasn1rtl.Asn1Boolean;
    l3rec : adaasn1rtl.Asn1Boolean;
END RECORD;

function FCE_RECOVERY_STATUS_REGISTER_Equal(val1, val2: in FCE_RECOVERY_STATUS_REGISTER) return Boolean;

function FCE_RECOVERY_STATUS_REGISTER_Init return FCE_RECOVERY_STATUS_REGISTER;

ERR_FCE_RECOVERY_STATUS_REGISTER_L2REC:CONSTANT INTEGER := 1172; 
ERR_FCE_RECOVERY_STATUS_REGISTER_L3REC:CONSTANT INTEGER := 1179; 
FUNCTION FCE_RECOVERY_STATUS_REGISTER_IsConstraintValid(val : in FCE_RECOVERY_STATUS_REGISTER) return adaasn1rtl.ASN1_RESULT;
SUBTYPE Counter_ty is adaasn1rtl.Asn1UInt range 0 .. 65535;


function Counter_ty_Equal(val1, val2: in Counter_ty) return Boolean;

function Counter_ty_Init return Counter_ty;

ERR_COUNTER_TY:CONSTANT INTEGER := 1216; -- 
FUNCTION Counter_ty_IsConstraintValid(val : in Counter_ty) return adaasn1rtl.ASN1_RESULT;
-- FCE_SIT_4 --------------------------------------------
SUBTYPE FCE_SIT_4_rc is adaasn1rtl.Asn1UInt range 1 .. 5;


TYPE FCE_SIT_4_EXIST IS RECORD
    test_mode_counter:adaasn1rtl.BIT;
END RECORD;
TYPE FCE_SIT_4 IS RECORD 
    rc : FCE_SIT_4_rc;
    ground_cmd_reset : adaasn1rtl.Asn1Boolean;
    test_mode_counter : Counter_ty;
    
    Exist : FCE_SIT_4_EXIST;

END RECORD;

function FCE_SIT_4_rc_Equal(val1, val2: in FCE_SIT_4_rc) return Boolean;

function FCE_SIT_4_Equal(val1, val2: in FCE_SIT_4) return Boolean;

function FCE_SIT_4_rc_Init return FCE_SIT_4_rc;
function FCE_SIT_4_Init return FCE_SIT_4;

ERR_FCE_SIT_4_RC:CONSTANT INTEGER := 936; 
ERR_FCE_SIT_4_GROUND_CMD_RESET:CONSTANT INTEGER := 943; 
ERR_FCE_SIT_4_TEST_MODE_COUNTER:CONSTANT INTEGER := 950; 
FUNCTION FCE_SIT_4_IsConstraintValid(val : in FCE_SIT_4) return adaasn1rtl.ASN1_RESULT;
-- FCE_SGM_EEPROM --------------------------------------------

TYPE FCE_SGM_EEPROM IS RECORD 
    sit_1 : FCE_SIT_1;
    sit_3 : FCE_SIT_3;
    sit_2 : FCE_SIT_2;
    sit_4 : FCE_SIT_4;
END RECORD;

function FCE_SGM_EEPROM_Equal(val1, val2: in FCE_SGM_EEPROM) return Boolean;

function FCE_SGM_EEPROM_Init return FCE_SGM_EEPROM;

ERR_FCE_SGM_EEPROM_SIT_1_IMU_1_CNF_N:CONSTANT INTEGER := 36; 
ERR_FCE_SGM_EEPROM_SIT_1_IMU_1_CNF_R:CONSTANT INTEGER := 47; 
ERR_FCE_SGM_EEPROM_SIT_1_IMU_1_CNF_G:CONSTANT INTEGER := 58; 
ERR_FCE_SGM_EEPROM_SIT_1_IMU_2_CNF_N:CONSTANT INTEGER := 75; 
ERR_FCE_SGM_EEPROM_SIT_1_IMU_2_CNF_R:CONSTANT INTEGER := 86; 
ERR_FCE_SGM_EEPROM_SIT_1_IMU_2_CNF_G:CONSTANT INTEGER := 97; 
ERR_FCE_SGM_EEPROM_SIT_1_RIUP_CNF_N:CONSTANT INTEGER := 114; 
ERR_FCE_SGM_EEPROM_SIT_1_RIUP_CNF_R:CONSTANT INTEGER := 125; 
ERR_FCE_SGM_EEPROM_SIT_1_RIUP_CNF_PWR_IO_N:CONSTANT INTEGER := 136; 
ERR_FCE_SGM_EEPROM_SIT_1_RIUP_CNF_PWR_IO_R:CONSTANT INTEGER := 147; 
ERR_FCE_SGM_EEPROM_SIT_1_SPWR_CNF_N:CONSTANT INTEGER := 158; 
ERR_FCE_SGM_EEPROM_SIT_1_SPWR_CNF_R:CONSTANT INTEGER := 169; 
ERR_FCE_SGM_EEPROM_SIT_1_RIUM_CNF_N:CONSTANT INTEGER := 180; 
ERR_FCE_SGM_EEPROM_SIT_1_RIUM_CNF_R:CONSTANT INTEGER := 191; 
ERR_FCE_SGM_EEPROM_SIT_1_RIUM_CNF_PWR_IO_N:CONSTANT INTEGER := 202; 
ERR_FCE_SGM_EEPROM_SIT_1_RIUM_CNF_PWR_IO_R:CONSTANT INTEGER := 213; 
ERR_FCE_SGM_EEPROM_SIT_1_CPST_CPST1_CNF_N:CONSTANT INTEGER := 224; 
ERR_FCE_SGM_EEPROM_SIT_1_CPST_CPST2_CNF_N:CONSTANT INTEGER := 235; 
ERR_FCE_SGM_EEPROM_SIT_1_CPST_CPST1_CNF_R:CONSTANT INTEGER := 246; 
ERR_FCE_SGM_EEPROM_SIT_1_CPST_CPST2_CNF_R:CONSTANT INTEGER := 257; 
ERR_FCE_SGM_EEPROM_SIT_1_SADT_CNF_N:CONSTANT INTEGER := 278; 
ERR_FCE_SGM_EEPROM_SIT_1_SADT_CNF_R:CONSTANT INTEGER := 289; 
ERR_FCE_SGM_EEPROM_SIT_1_CPSP_CPSP1_CNF_N:CONSTANT INTEGER := 310; 
ERR_FCE_SGM_EEPROM_SIT_1_CPSP_CPSP2_CNF_N:CONSTANT INTEGER := 321; 
ERR_FCE_SGM_EEPROM_SIT_1_CPSP_CPSP1_CNF_R:CONSTANT INTEGER := 332; 
ERR_FCE_SGM_EEPROM_SIT_1_CPSP_CPSP2_CNF_R:CONSTANT INTEGER := 343; 
ERR_FCE_SGM_EEPROM_SIT_1_SADP_CNF_N:CONSTANT INTEGER := 364; 
ERR_FCE_SGM_EEPROM_SIT_1_SADP_CNF_R:CONSTANT INTEGER := 375; 
ERR_FCE_SGM_EEPROM_SIT_3_NOTHING:CONSTANT INTEGER := 406; 
ERR_FCE_SGM_EEPROM_SIT_2_IS_SEP_PHASE:CONSTANT INTEGER := 423; 
ERR_FCE_SGM_EEPROM_SIT_2_SA_IS_EDGE_ON_SUN_ALWD:CONSTANT INTEGER := 430; 
ERR_FCE_SGM_EEPROM_SIT_2_SC_CONF:CONSTANT INTEGER := 437; 
ERR_FCE_SGM_EEPROM_SIT_4_RC:CONSTANT INTEGER := 454; 
ERR_FCE_SGM_EEPROM_SIT_4_GROUND_CMD_RESET:CONSTANT INTEGER := 461; 
ERR_FCE_SGM_EEPROM_SIT_4_TEST_MODE_COUNTER:CONSTANT INTEGER := 468; 
FUNCTION FCE_SGM_EEPROM_IsConstraintValid(val : in FCE_SGM_EEPROM) return adaasn1rtl.ASN1_RESULT;
SUBTYPE Bool_ty is adaasn1rtl.Asn1Boolean;


function Bool_ty_Equal(val1, val2: in Bool_ty) return Boolean;

function Bool_ty_Init return Bool_ty;

ERR_BOOL_TY:CONSTANT INTEGER := 1223; -- 
FUNCTION Bool_ty_IsConstraintValid(val : in Bool_ty) return adaasn1rtl.ASN1_RESULT;
SUBTYPE Valid_ty_index_range is integer range 0..1;
TYPE Valid_ty IS (ok, nok) with Convention => C;
for Valid_ty use
    (ok => 0, nok => 1);

function Valid_ty_Equal(val1, val2: in Valid_ty) return Boolean;

function Valid_ty_Init return Valid_ty;

ERR_VALID_TY:CONSTANT INTEGER := 1230; -- 
FUNCTION Valid_ty_IsConstraintValid(val : in Valid_ty) return adaasn1rtl.ASN1_RESULT;
-- FCE_CONTROL_FLAGS_STATUS_REGISTER --------------------------------------------
SUBTYPE FCE_CONTROL_FLAGS_STATUS_REGISTER_arr_dep_flag_index_range is integer range 0..1;
TYPE FCE_CONTROL_FLAGS_STATUS_REGISTER_arr_dep_flag IS (majority, minority) with Convention => C;
for FCE_CONTROL_FLAGS_STATUS_REGISTER_arr_dep_flag use
    (majority => 0, minority => 1);

TYPE FCE_CONTROL_FLAGS_STATUS_REGISTER IS RECORD 
    arr_dep_flag : FCE_CONTROL_FLAGS_STATUS_REGISTER_arr_dep_flag;
    reference_pattern : Valid_ty;
END RECORD;

function FCE_CONTROL_FLAGS_STATUS_REGISTER_arr_dep_flag_Equal(val1, val2: in FCE_CONTROL_FLAGS_STATUS_REGISTER_arr_dep_flag) return Boolean;

function FCE_CONTROL_FLAGS_STATUS_REGISTER_Equal(val1, val2: in FCE_CONTROL_FLAGS_STATUS_REGISTER) return Boolean;

function FCE_CONTROL_FLAGS_STATUS_REGISTER_arr_dep_flag_Init return FCE_CONTROL_FLAGS_STATUS_REGISTER_arr_dep_flag;
function FCE_CONTROL_FLAGS_STATUS_REGISTER_Init return FCE_CONTROL_FLAGS_STATUS_REGISTER;

ERR_FCE_CONTROL_FLAGS_STATUS_REGISTER_ARR_DEP_FLAG:CONSTANT INTEGER := 1192; 
ERR_FCE_CONTROL_FLAGS_STATUS_REGISTER_REFERENCE_PATTERN:CONSTANT INTEGER := 1199; 
FUNCTION FCE_CONTROL_FLAGS_STATUS_REGISTER_IsConstraintValid(val : in FCE_CONTROL_FLAGS_STATUS_REGISTER) return adaasn1rtl.ASN1_RESULT;
SUBTYPE Quaternion_ty is adaasn1rtl.Asn1Boolean;


function Quaternion_ty_Equal(val1, val2: in Quaternion_ty) return Boolean;

function Quaternion_ty_Init return Quaternion_ty;

ERR_QUATERNION_TY:CONSTANT INTEGER := 1237; -- 
FUNCTION Quaternion_ty_IsConstraintValid(val : in Quaternion_ty) return adaasn1rtl.ASN1_RESULT;
SUBTYPE Angular_rate_ty is adaasn1rtl.Asn1Boolean;


function Angular_rate_ty_Equal(val1, val2: in Angular_rate_ty) return Boolean;

function Angular_rate_ty_Init return Angular_rate_ty;

ERR_ANGULAR_RATE_TY:CONSTANT INTEGER := 1244; -- 
FUNCTION Angular_rate_ty_IsConstraintValid(val : in Angular_rate_ty) return adaasn1rtl.ASN1_RESULT;
-- FCE_SGM_RAM --------------------------------------------
SUBTYPE FCE_SGM_RAM_llobt is adaasn1rtl.Asn1UInt range 0 .. 255;


TYPE FCE_SGM_RAM IS RECORD 
    llobt : FCE_SGM_RAM_llobt;
    llatt : Quaternion_ty;
    llare : Angular_rate_ty;
END RECORD;

function FCE_SGM_RAM_llobt_Equal(val1, val2: in FCE_SGM_RAM_llobt) return Boolean;

function FCE_SGM_RAM_Equal(val1, val2: in FCE_SGM_RAM) return Boolean;

function FCE_SGM_RAM_llobt_Init return FCE_SGM_RAM_llobt;
function FCE_SGM_RAM_Init return FCE_SGM_RAM;

ERR_FCE_SGM_RAM_LLOBT:CONSTANT INTEGER := 495; 
ERR_FCE_SGM_RAM_LLATT:CONSTANT INTEGER := 502; 
ERR_FCE_SGM_RAM_LLARE:CONSTANT INTEGER := 513; 
FUNCTION FCE_SGM_RAM_IsConstraintValid(val : in FCE_SGM_RAM) return adaasn1rtl.ASN1_RESULT;

 

private
   --# hide TASTE_Dataview;


END TASTE_Dataview;