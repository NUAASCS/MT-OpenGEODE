-- Code automatically generated by asn1scc tool
WITH adaasn1rtl;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;


PACKAGE BODY TASTE_Dataview with SPARK_Mode IS




function EmptySeq_Equal(val1, val2: in EmptySeq)
    return Boolean 
is
begin
	return True;

end EmptySeq_Equal;

function EmptySeq_Init return EmptySeq
is
    val: EmptySeq;
begin
    val := (null record);
    return val;
end EmptySeq_Init;



function AnotherEmptySeq_Equal(val1, val2: in AnotherEmptySeq)
    return Boolean 
is
begin
	return True;

end AnotherEmptySeq_Equal;

function AnotherEmptySeq_Init return AnotherEmptySeq
is
    val: AnotherEmptySeq;
begin
    val := (null record);
    return val;
end AnotherEmptySeq_Init;



function NullType_Equal(val1, val2: in NullType)
    return Boolean 
is
begin
	return True;

end NullType_Equal;

function NullType_Init return NullType
is
    val: NullType;
begin
    val := 0;
    return val;
end NullType_Init;



function ChoiceWithEmptySeq_Equal(val1, val2: in ChoiceWithEmptySeq)
    return Boolean 
is
    pragma Warnings (Off, "initialization of ret has no effect");        
    ret : Boolean := TRUE;
    pragma Warnings (On, "initialization of ret has no effect");        

begin
    ret := val1.kind = val2.kind;
    if ret then
        case val1.kind is
            when a_PRESENT =>
                ret := TRUE;
            when b_PRESENT =>
                ret := EmptySeq_Equal(val1.b, val2.b);
            when c_PRESENT =>
                ret := TRUE;
        end case;
    end if;
	return ret;

end ChoiceWithEmptySeq_Equal;

function ChoiceWithEmptySeq_Init return ChoiceWithEmptySeq
is
    val: ChoiceWithEmptySeq;
begin
    --set a 
    declare
        a_tmp:adaasn1rtl.Asn1NullType;
    begin
        a_tmp := 0;
        val := ChoiceWithEmptySeq'(kind => a_PRESENT, a => a_tmp);
    end;
    return val;
end ChoiceWithEmptySeq_Init;

FUNCTION ChoiceWithEmptySeq_IsConstraintValid(val : in ChoiceWithEmptySeq) return adaasn1rtl.ASN1_RESULT
IS
    pragma Warnings (Off, "initialization of ret has no effect");        
    ret : adaasn1rtl.ASN1_RESULT := adaasn1rtl.ASN1_RESULT'(Success => true, ErrorCode => 0);
    pragma Warnings (On, "initialization of ret has no effect");        
BEGIN
    case val.kind is
        WHEN a_PRESENT =>
            ret := adaasn1rtl.ASN1_RESULT'(Success => true, ErrorCode => 0);
        WHEN b_PRESENT =>
            ret := adaasn1rtl.ASN1_RESULT'(Success => true, ErrorCode => 0);
        WHEN c_PRESENT =>
            ret := adaasn1rtl.ASN1_RESULT'(Success => true, ErrorCode => 0);
    end case;
    RETURN ret;
END ChoiceWithEmptySeq_IsConstraintValid;


 

END TASTE_Dataview;