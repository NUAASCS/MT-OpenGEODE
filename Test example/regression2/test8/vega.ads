-- Code automatically generated by asn1scc tool
WITH adaasn1rtl;
USE adaasn1rtl;
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
WITH TASTE_BasicTypes; use TASTE_BasicTypes;
--# inherit TASTE_BasicTypes;


PACKAGE VEGA with SPARK_Mode
IS


SUBTYPE T_DOUBLE is adaasn1rtl.Asn1Real;


function T_DOUBLE_Equal(val1, val2: in T_DOUBLE) return Boolean;

function T_DOUBLE_Init return T_DOUBLE;

ERR_T_DOUBLE:CONSTANT INTEGER := 520; -- 
FUNCTION T_DOUBLE_IsConstraintValid(val : in T_DOUBLE) return adaasn1rtl.ASN1_RESULT;
SUBTYPE T_FLOAT32 is T_DOUBLE;


function T_FLOAT32_Equal(val1, val2: in T_FLOAT32) return Boolean;

function T_FLOAT32_Init return T_FLOAT32;

ERR_T_FLOAT32:CONSTANT INTEGER := 404; -- 
FUNCTION T_FLOAT32_IsConstraintValid(val : in T_FLOAT32) return adaasn1rtl.ASN1_RESULT;
-- T_QUAT_FLOAT32 --------------------------------------------
SUBTYPE T_QUAT_FLOAT32_index is integer range 1..4;
TYPE T_QUAT_FLOAT32_array IS ARRAY (T_QUAT_FLOAT32_index) OF T_FLOAT32;
TYPE T_QUAT_FLOAT32 IS  RECORD
    Data  : T_QUAT_FLOAT32_array;
END RECORD;

function T_QUAT_FLOAT32_Equal(val1, val2: in T_QUAT_FLOAT32) return Boolean;

function T_QUAT_FLOAT32_Init return T_QUAT_FLOAT32;

ERR_T_QUAT_FLOAT32_ELM:CONSTANT INTEGER := 415; 
FUNCTION T_QUAT_FLOAT32_IsConstraintValid(val : in T_QUAT_FLOAT32) return adaasn1rtl.ASN1_RESULT;
-- T_VECT3_FLOAT32 --------------------------------------------
SUBTYPE T_VECT3_FLOAT32_index is integer range 1..3;
TYPE T_VECT3_FLOAT32_array IS ARRAY (T_VECT3_FLOAT32_index) OF T_FLOAT32;
TYPE T_VECT3_FLOAT32 IS  RECORD
    Data  : T_VECT3_FLOAT32_array;
END RECORD;

function T_VECT3_FLOAT32_Equal(val1, val2: in T_VECT3_FLOAT32) return Boolean;

function T_VECT3_FLOAT32_Init return T_VECT3_FLOAT32;

ERR_T_VECT3_FLOAT32_ELM:CONSTANT INTEGER := 436; 
FUNCTION T_VECT3_FLOAT32_IsConstraintValid(val : in T_VECT3_FLOAT32) return adaasn1rtl.ASN1_RESULT;
-- T_GNC_LV_SIM_CONTEXT --------------------------------------------

TYPE T_GNC_LV_SIM_CONTEXT IS RECORD 
    attitude_quaternion : T_QUAT_FLOAT32;
    ng_vel_incr_irs : T_VECT3_FLOAT32;
    ng_vel_incr_accelero : T_VECT3_FLOAT32;
    filtered_angles_sample_1 : T_VECT3_FLOAT32;
    filtered_angles_sample_2 : T_VECT3_FLOAT32;
END RECORD;

function T_GNC_LV_SIM_CONTEXT_Equal(val1, val2: in T_GNC_LV_SIM_CONTEXT) return Boolean;

function T_GNC_LV_SIM_CONTEXT_Init return T_GNC_LV_SIM_CONTEXT;

ERR_T_GNC_LV_SIM_CONTEXT_ATTITUDE_QUATERNION_ELM:CONSTANT INTEGER := 192; 
ERR_T_GNC_LV_SIM_CONTEXT_NG_VEL_INCR_IRS_ELM:CONSTANT INTEGER := 217; 
ERR_T_GNC_LV_SIM_CONTEXT_NG_VEL_INCR_ACCELERO_ELM:CONSTANT INTEGER := 242; 
ERR_T_GNC_LV_SIM_CONTEXT_FILTERED_ANGLES_SAMPLE_1_ELM:CONSTANT INTEGER := 267; 
ERR_T_GNC_LV_SIM_CONTEXT_FILTERED_ANGLES_SAMPLE_2_ELM:CONSTANT INTEGER := 292; 
FUNCTION T_GNC_LV_SIM_CONTEXT_IsConstraintValid(val : in T_GNC_LV_SIM_CONTEXT) return adaasn1rtl.ASN1_RESULT;
-- Simulation_Param --------------------------------------------
-- Simulation_Param_command --------------------------------------------

SUBTYPE Simulation_Param_command_index_range is integer range 0..4;

TYPE Simulation_Param_command_selection IS (run_n_steps_PRESENT, run_n_seconds_PRESENT, run_forever_PRESENT, pause_PRESENT, test_gnc_PRESENT);
for Simulation_Param_command_selection use
    (run_n_steps_PRESENT => 1, run_n_seconds_PRESENT => 2, run_forever_PRESENT => 3, pause_PRESENT => 4, test_gnc_PRESENT => 5);
for Simulation_Param_command_selection'Size use 32;

TYPE Simulation_Param_command(kind : Simulation_Param_command_selection:= run_n_steps_PRESENT) IS 
RECORD
    case kind is
    when run_n_steps_PRESENT =>
            run_n_steps: TASTE_BasicTypes.T_UInt32;
    when run_n_seconds_PRESENT =>
            run_n_seconds: TASTE_BasicTypes.T_UInt32;
    when run_forever_PRESENT =>
            run_forever: adaasn1rtl.Asn1Boolean;
    when pause_PRESENT =>
            pause: adaasn1rtl.Asn1Boolean;
    when test_gnc_PRESENT =>
            test_gnc: adaasn1rtl.Asn1Boolean;
    end case;
END RECORD;

FOR Simulation_Param_command USE 
RECORD
    kind AT 0 RANGE 0..31;
END RECORD;

TYPE Simulation_Param IS RECORD 
    command : Simulation_Param_command;
    gnc_inputs : T_GNC_LV_SIM_CONTEXT;
END RECORD;

function Simulation_Param_command_Equal(val1, val2: in Simulation_Param_command) return Boolean;

function Simulation_Param_Equal(val1, val2: in Simulation_Param) return Boolean;

function Simulation_Param_command_Init return Simulation_Param_command;
function Simulation_Param_Init return Simulation_Param;

ERR_SIMULATION_PARAM_COMMAND:CONSTANT INTEGER := 44; 
ERR_SIMULATION_PARAM_COMMAND_RUN_N_STEPS:CONSTANT INTEGER := 1; 
ERR_SIMULATION_PARAM_COMMAND_RUN_N_SECONDS:CONSTANT INTEGER := 12; 
ERR_SIMULATION_PARAM_COMMAND_RUN_FOREVER:CONSTANT INTEGER := 23; 
ERR_SIMULATION_PARAM_COMMAND_PAUSE:CONSTANT INTEGER := 30; 
ERR_SIMULATION_PARAM_COMMAND_TEST_GNC:CONSTANT INTEGER := 37; 
ERR_SIMULATION_PARAM_GNC_INPUTS_ATTITUDE_QUATERNION_ELM:CONSTANT INTEGER := 51; 
ERR_SIMULATION_PARAM_GNC_INPUTS_NG_VEL_INCR_IRS_ELM:CONSTANT INTEGER := 76; 
ERR_SIMULATION_PARAM_GNC_INPUTS_NG_VEL_INCR_ACCELERO_ELM:CONSTANT INTEGER := 101; 
ERR_SIMULATION_PARAM_GNC_INPUTS_FILTERED_ANGLES_SAMPLE_1_ELM:CONSTANT INTEGER := 126; 
ERR_SIMULATION_PARAM_GNC_INPUTS_FILTERED_ANGLES_SAMPLE_2_ELM:CONSTANT INTEGER := 151; 
FUNCTION Simulation_Param_IsConstraintValid(val : in Simulation_Param) return adaasn1rtl.ASN1_RESULT;
-- T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT --------------------------------------------
SUBTYPE T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_index is integer range 1..20;
TYPE T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_array IS ARRAY (T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_index) OF T_FLOAT32;
TYPE T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT IS  RECORD
    Data  : T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_array;
END RECORD;

function T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_Equal(val1, val2: in T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT) return Boolean;

function T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_Init return T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT;

ERR_T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_ELM:CONSTANT INTEGER := 457; 
FUNCTION T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_IsConstraintValid(val : in T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT) return adaasn1rtl.ASN1_RESULT;
-- T_TVC_SET_POINT_ENG_VECT --------------------------------------------
SUBTYPE T_TVC_SET_POINT_ENG_VECT_index is integer range 1..8;
TYPE T_TVC_SET_POINT_ENG_VECT_array IS ARRAY (T_TVC_SET_POINT_ENG_VECT_index) OF T_FLOAT32;
TYPE T_TVC_SET_POINT_ENG_VECT IS  RECORD
    Data  : T_TVC_SET_POINT_ENG_VECT_array;
END RECORD;

function T_TVC_SET_POINT_ENG_VECT_Equal(val1, val2: in T_TVC_SET_POINT_ENG_VECT) return Boolean;

function T_TVC_SET_POINT_ENG_VECT_Init return T_TVC_SET_POINT_ENG_VECT;

ERR_T_TVC_SET_POINT_ENG_VECT_ELM:CONSTANT INTEGER := 478; 
FUNCTION T_TVC_SET_POINT_ENG_VECT_IsConstraintValid(val : in T_TVC_SET_POINT_ENG_VECT) return adaasn1rtl.ASN1_RESULT;
-- T_RACS_EV_CMD_VECT --------------------------------------------
SUBTYPE T_RACS_EV_CMD_VECT_index is integer range 1..6;
TYPE T_RACS_EV_CMD_VECT_array IS ARRAY (T_RACS_EV_CMD_VECT_index) OF T_FLOAT32;
TYPE T_RACS_EV_CMD_VECT IS  RECORD
    Data  : T_RACS_EV_CMD_VECT_array;
END RECORD;

function T_RACS_EV_CMD_VECT_Equal(val1, val2: in T_RACS_EV_CMD_VECT) return Boolean;

function T_RACS_EV_CMD_VECT_Init return T_RACS_EV_CMD_VECT;

ERR_T_RACS_EV_CMD_VECT_ELM:CONSTANT INTEGER := 499; 
FUNCTION T_RACS_EV_CMD_VECT_IsConstraintValid(val : in T_RACS_EV_CMD_VECT) return adaasn1rtl.ASN1_RESULT;
-- T_GNC_LV_SIM_INPUTS --------------------------------------------

TYPE T_GNC_LV_SIM_INPUTS IS RECORD 
    sequ_exec_request_vect : T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT;
    tvc_set_point_eng_vect : T_TVC_SET_POINT_ENG_VECT;
    racs_ev_cmd_vect : T_RACS_EV_CMD_VECT;
END RECORD;

function T_GNC_LV_SIM_INPUTS_Equal(val1, val2: in T_GNC_LV_SIM_INPUTS) return Boolean;

function T_GNC_LV_SIM_INPUTS_Init return T_GNC_LV_SIM_INPUTS;

ERR_T_GNC_LV_SIM_INPUTS_SEQU_EXEC_REQUEST_VECT_ELM:CONSTANT INTEGER := 323; 
ERR_T_GNC_LV_SIM_INPUTS_TVC_SET_POINT_ENG_VECT_ELM:CONSTANT INTEGER := 348; 
ERR_T_GNC_LV_SIM_INPUTS_RACS_EV_CMD_VECT_ELM:CONSTANT INTEGER := 373; 
FUNCTION T_GNC_LV_SIM_INPUTS_IsConstraintValid(val : in T_GNC_LV_SIM_INPUTS) return adaasn1rtl.ASN1_RESULT;
-- T_Plot --------------------------------------------

TYPE T_Plot IS RECORD 
    major_cycle : TASTE_BasicTypes.T_UInt32;
    subcycle : TASTE_BasicTypes.T_Int8;
    gnc_inputs : T_GNC_LV_SIM_CONTEXT;
    gnc_outputs : T_GNC_LV_SIM_INPUTS;
END RECORD;

function T_Plot_Equal(val1, val2: in T_Plot) return Boolean;

function T_Plot_Init return T_Plot;

ERR_T_PLOT_MAJOR_CYCLE:CONSTANT INTEGER := 527; 
ERR_T_PLOT_SUBCYCLE:CONSTANT INTEGER := 538; 
ERR_T_PLOT_GNC_INPUTS_ATTITUDE_QUATERNION_ELM:CONSTANT INTEGER := 549; 
ERR_T_PLOT_GNC_INPUTS_NG_VEL_INCR_IRS_ELM:CONSTANT INTEGER := 574; 
ERR_T_PLOT_GNC_INPUTS_NG_VEL_INCR_ACCELERO_ELM:CONSTANT INTEGER := 599; 
ERR_T_PLOT_GNC_INPUTS_FILTERED_ANGLES_SAMPLE_1_ELM:CONSTANT INTEGER := 624; 
ERR_T_PLOT_GNC_INPUTS_FILTERED_ANGLES_SAMPLE_2_ELM:CONSTANT INTEGER := 649; 
ERR_T_PLOT_GNC_OUTPUTS_SEQU_EXEC_REQUEST_VECT_ELM:CONSTANT INTEGER := 684; 
ERR_T_PLOT_GNC_OUTPUTS_TVC_SET_POINT_ENG_VECT_ELM:CONSTANT INTEGER := 709; 
ERR_T_PLOT_GNC_OUTPUTS_RACS_EV_CMD_VECT_ELM:CONSTANT INTEGER := 734; 
FUNCTION T_Plot_IsConstraintValid(val : in T_Plot) return adaasn1rtl.ASN1_RESULT;

size_T_QUAT_COMPONENTS : CONSTANT adaasn1rtl.Asn1Int:= 4;
size_T_AXIS_3_ID : CONSTANT adaasn1rtl.Asn1Int:= 3;
size_T_SEQUENCE_ID : CONSTANT adaasn1rtl.Asn1Int:= 20;
size_T_TVC_SET_POINT_ENG_VECT_IDX : CONSTANT adaasn1rtl.Asn1Int:= 8;
size_T_ACS_EQPT_ID : CONSTANT adaasn1rtl.Asn1Int:= 6; 

private
   --# hide VEGA;


END VEGA;