-- Code automatically generated by asn1scc tool
WITH adaasn1rtl;
USE adaasn1rtl;
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
--# inherit ;


PACKAGE VEGA with SPARK_Mode
IS


SUBTYPE T_QUAT_COMPONENTS is adaasn1rtl.Asn1UInt range 0 .. 3;


function T_QUAT_COMPONENTS_Equal(val1, val2: in T_QUAT_COMPONENTS) return Boolean;

function T_QUAT_COMPONENTS_Init return T_QUAT_COMPONENTS;

ERR_T_QUAT_COMPONENTS:CONSTANT INTEGER := 259; -- 
FUNCTION T_QUAT_COMPONENTS_IsConstraintValid(val : in T_QUAT_COMPONENTS) return adaasn1rtl.ASN1_RESULT;
SUBTYPE T_RANGE_3 is adaasn1rtl.Asn1UInt range 0 .. 2;


function T_RANGE_3_Equal(val1, val2: in T_RANGE_3) return Boolean;

function T_RANGE_3_Init return T_RANGE_3;

ERR_T_RANGE_3:CONSTANT INTEGER := 298; -- 
FUNCTION T_RANGE_3_IsConstraintValid(val : in T_RANGE_3) return adaasn1rtl.ASN1_RESULT;
SUBTYPE T_AXIS_3_ID is T_RANGE_3 range 0 .. 2;


function T_AXIS_3_ID_Equal(val1, val2: in T_AXIS_3_ID) return Boolean;

function T_AXIS_3_ID_Init return T_AXIS_3_ID;

ERR_T_AXIS_3_ID:CONSTANT INTEGER := 287; -- 
FUNCTION T_AXIS_3_ID_IsConstraintValid(val : in T_AXIS_3_ID) return adaasn1rtl.ASN1_RESULT;
SUBTYPE T_SEQUENCE_ID_index_range is integer range 0..100;
TYPE T_SEQUENCE_ID IS (sequence_id_none, command_irs_in_flight_mode, select_uctm_telemetry_format_2, inhibit_bus_repeater_egse_line, ignite_p80_motor, select_uctm_telemetry_format_3, select_uctm_telemetry_format_4, open_mea_valves, close_mea_valves, select_uctm_telemetry_format_5, open_sas_dry_loops, select_uctm_telemetry_format_6, select_uctm_telemetry_format_7, passivate_lps_1_2, pressurize_lps_1_2, pressurize_lps_4_6, pressurize_lps_3_5, pressurize_lps_hppy, passivate_lps_3, passivate_lps_4, passivate_racs, initiate_racs_system_priming, set_racs_to_full_operational_mode, open_lps_evacuation_valves, close_lps_evacuation_valves, separate_multipayload_adapter, select_uctm_telemetry_format_8, select_uctm_telemetry_format_9, select_uctm_telemetry_format_10, select_uctm_telemetry_format_11, select_uctm_telemetry_format_12, select_uctm_telemetry_format_13, select_uctm_telemetry_format_14, select_uctm_telemetry_format_15, separate_func_mc, separate_func_1, separate_func_2, separate_func_3, inhibit_bus_repeater_pl_line, activate_electrical_order_1, activate_electrical_order_2, activate_electrical_order_3, activate_electrical_order_4, activate_electrical_order_5, deactivate_electrical_order_1, deactivate_electrical_order_2, deactivate_electrical_order_3, deactivate_electrical_order_4, deactivate_electrical_order_5, close_pl_dry_loop_1, close_pl_dry_loop_2, close_pl_dry_loop_3, close_pl_dry_loop_4, close_pl_dry_loop_5, close_pl_dry_loop_6, close_pl_dry_loop_7, close_pl_dry_loop_8, open_pl_dry_loop_1, open_pl_dry_loop_2, open_pl_dry_loop_3, open_pl_dry_loop_4, open_pl_dry_loop_5, open_pl_dry_loop_6, open_pl_dry_loop_7, open_pl_dry_loop_8, reactivate_payload_supply_breaker, rearm_eo_breaker, close_spare_dry_loop_14, close_spare_dry_loop_15, close_spare_dry_loop_16, open_spare_dry_loop_14, open_spare_dry_loop_15, open_spare_dry_loop_16, open_spare_dry_loop_17, close_spare_dry_loop_17, open_spare_dry_loop_18, close_spare_dry_loop_18, p80_separation, z23_ignition, z23_separation, z9_ignition, z9_separation, fairing_separation, sequence_unused_83, sequence_unused_84, sequence_unused_85, sequence_unused_86, sequence_unused_87, sequence_unused_88, sequence_unused_89, sequence_unused_90, sequence_unused_91, sequence_unused_92, sequence_unused_93, sequence_unused_94, sequence_unused_95, sequence_unused_96, sequence_unused_97, sequence_unused_98, sequence_unused_99, sequence_unused_100) with Convention => C;
for T_SEQUENCE_ID use
    (sequence_id_none => 0, command_irs_in_flight_mode => 1, select_uctm_telemetry_format_2 => 2, inhibit_bus_repeater_egse_line => 3, ignite_p80_motor => 4, select_uctm_telemetry_format_3 => 5, select_uctm_telemetry_format_4 => 6, open_mea_valves => 7, close_mea_valves => 8, select_uctm_telemetry_format_5 => 9, open_sas_dry_loops => 10, select_uctm_telemetry_format_6 => 11, select_uctm_telemetry_format_7 => 12, passivate_lps_1_2 => 13, pressurize_lps_1_2 => 14, pressurize_lps_4_6 => 15, pressurize_lps_3_5 => 16, pressurize_lps_hppy => 17, passivate_lps_3 => 18, passivate_lps_4 => 19, passivate_racs => 20, initiate_racs_system_priming => 21, set_racs_to_full_operational_mode => 22, open_lps_evacuation_valves => 23, close_lps_evacuation_valves => 24, separate_multipayload_adapter => 25, select_uctm_telemetry_format_8 => 26, select_uctm_telemetry_format_9 => 27, select_uctm_telemetry_format_10 => 28, select_uctm_telemetry_format_11 => 29, select_uctm_telemetry_format_12 => 30, select_uctm_telemetry_format_13 => 31, select_uctm_telemetry_format_14 => 32, select_uctm_telemetry_format_15 => 33, separate_func_mc => 34, separate_func_1 => 35, separate_func_2 => 36, separate_func_3 => 37, inhibit_bus_repeater_pl_line => 38, activate_electrical_order_1 => 39, activate_electrical_order_2 => 40, activate_electrical_order_3 => 41, activate_electrical_order_4 => 42, activate_electrical_order_5 => 43, deactivate_electrical_order_1 => 44, deactivate_electrical_order_2 => 45, deactivate_electrical_order_3 => 46, deactivate_electrical_order_4 => 47, deactivate_electrical_order_5 => 48, close_pl_dry_loop_1 => 49, close_pl_dry_loop_2 => 50, close_pl_dry_loop_3 => 51, close_pl_dry_loop_4 => 52, close_pl_dry_loop_5 => 53, close_pl_dry_loop_6 => 54, close_pl_dry_loop_7 => 55, close_pl_dry_loop_8 => 56, open_pl_dry_loop_1 => 57, open_pl_dry_loop_2 => 58, open_pl_dry_loop_3 => 59, open_pl_dry_loop_4 => 60, open_pl_dry_loop_5 => 61, open_pl_dry_loop_6 => 62, open_pl_dry_loop_7 => 63, open_pl_dry_loop_8 => 64, reactivate_payload_supply_breaker => 65, rearm_eo_breaker => 66, close_spare_dry_loop_14 => 67, close_spare_dry_loop_15 => 68, close_spare_dry_loop_16 => 69, open_spare_dry_loop_14 => 70, open_spare_dry_loop_15 => 71, open_spare_dry_loop_16 => 72, open_spare_dry_loop_17 => 73, close_spare_dry_loop_17 => 74, open_spare_dry_loop_18 => 75, close_spare_dry_loop_18 => 76, p80_separation => 77, z23_ignition => 78, z23_separation => 79, z9_ignition => 80, z9_separation => 81, fairing_separation => 82, sequence_unused_83 => 83, sequence_unused_84 => 84, sequence_unused_85 => 85, sequence_unused_86 => 86, sequence_unused_87 => 87, sequence_unused_88 => 88, sequence_unused_89 => 89, sequence_unused_90 => 90, sequence_unused_91 => 91, sequence_unused_92 => 92, sequence_unused_93 => 93, sequence_unused_94 => 94, sequence_unused_95 => 95, sequence_unused_96 => 96, sequence_unused_97 => 97, sequence_unused_98 => 98, sequence_unused_99 => 99, sequence_unused_100 => 100);

function T_SEQUENCE_ID_Equal(val1, val2: in T_SEQUENCE_ID) return Boolean;

function T_SEQUENCE_ID_Init return T_SEQUENCE_ID;

ERR_T_SEQUENCE_ID:CONSTANT INTEGER := 326; -- 
FUNCTION T_SEQUENCE_ID_IsConstraintValid(val : in T_SEQUENCE_ID) return adaasn1rtl.ASN1_RESULT;
SUBTYPE T_TVC_SET_POINT_ENG_VECT_IDX_index_range is integer range 0..7;
TYPE T_TVC_SET_POINT_ENG_VECT_IDX IS (p80_x, p80_y, z23_x, z23_y, z09_x, z09_y, avum_x, avum_y) with Convention => C;
for T_TVC_SET_POINT_ENG_VECT_IDX use
    (p80_x => 0, p80_y => 1, z23_x => 2, z23_y => 3, z09_x => 4, z09_y => 5, avum_x => 6, avum_y => 7);

function T_TVC_SET_POINT_ENG_VECT_IDX_Equal(val1, val2: in T_TVC_SET_POINT_ENG_VECT_IDX) return Boolean;

function T_TVC_SET_POINT_ENG_VECT_IDX_Init return T_TVC_SET_POINT_ENG_VECT_IDX;

ERR_T_TVC_SET_POINT_ENG_VECT_IDX:CONSTANT INTEGER := 354; -- 
FUNCTION T_TVC_SET_POINT_ENG_VECT_IDX_IsConstraintValid(val : in T_TVC_SET_POINT_ENG_VECT_IDX) return adaasn1rtl.ASN1_RESULT;
SUBTYPE T_ACS_EQPT_ID_index_range is integer range 0..5;
TYPE T_ACS_EQPT_ID IS (acs_eqpt_1, acs_eqpt_2, acs_eqpt_3, acs_eqpt_4, acs_eqpt_5, acs_eqpt_6) with Convention => C;
for T_ACS_EQPT_ID use
    (acs_eqpt_1 => 0, acs_eqpt_2 => 1, acs_eqpt_3 => 2, acs_eqpt_4 => 3, acs_eqpt_5 => 4, acs_eqpt_6 => 5);

function T_ACS_EQPT_ID_Equal(val1, val2: in T_ACS_EQPT_ID) return Boolean;

function T_ACS_EQPT_ID_Init return T_ACS_EQPT_ID;

ERR_T_ACS_EQPT_ID:CONSTANT INTEGER := 382; -- 
FUNCTION T_ACS_EQPT_ID_IsConstraintValid(val : in T_ACS_EQPT_ID) return adaasn1rtl.ASN1_RESULT;
SUBTYPE T_INTR_index_range is integer range 0..36;
TYPE T_INTR IS (hwe, asg_al3, asg_al1, ic_obtpulse4, ic_rtc, ic_utca, m5_recerr, m5_lberr, m5_dnc, m5_slend, m5_slimed, m5_slloop, m5_slchok, m5_rtrec, m5_rttrn, m5_rtbct, m5_rtmode, m5_rtsync, m5_rtrst, obt_1hz, obt_syncsw, obt_sample1, pim_et, wd_wde, obt_pulse1, uart_a, uart_b, memerr, uart_err, dma_err, dma_tmo, obt_pulse2, obt_pulse3, gpt, rtc, obt_pulse4, wdtmo) with Convention => C;
for T_INTR use
    (hwe => 0, asg_al3 => 1, asg_al1 => 2, ic_obtpulse4 => 3, ic_rtc => 4, ic_utca => 5, m5_recerr => 6, m5_lberr => 7, m5_dnc => 8, m5_slend => 9, m5_slimed => 10, m5_slloop => 11, m5_slchok => 12, m5_rtrec => 13, m5_rttrn => 14, m5_rtbct => 15, m5_rtmode => 16, m5_rtsync => 17, m5_rtrst => 18, obt_1hz => 19, obt_syncsw => 20, obt_sample1 => 21, pim_et => 22, wd_wde => 23, obt_pulse1 => 24, uart_a => 25, uart_b => 26, memerr => 27, uart_err => 28, dma_err => 29, dma_tmo => 30, obt_pulse2 => 31, obt_pulse3 => 32, gpt => 33, rtc => 34, obt_pulse4 => 35, wdtmo => 36);

function T_INTR_Equal(val1, val2: in T_INTR) return Boolean;

function T_INTR_Init return T_INTR;

ERR_T_INTR:CONSTANT INTEGER := 410; -- 
FUNCTION T_INTR_IsConstraintValid(val : in T_INTR) return adaasn1rtl.ASN1_RESULT;
SUBTYPE T_DOUBLE is adaasn1rtl.Asn1Real;


function T_DOUBLE_Equal(val1, val2: in T_DOUBLE) return Boolean;

function T_DOUBLE_Init return T_DOUBLE;

ERR_T_DOUBLE:CONSTANT INTEGER := 417; -- 
FUNCTION T_DOUBLE_IsConstraintValid(val : in T_DOUBLE) return adaasn1rtl.ASN1_RESULT;
SUBTYPE T_FLOAT32 is T_DOUBLE;


function T_FLOAT32_Equal(val1, val2: in T_FLOAT32) return Boolean;

function T_FLOAT32_Init return T_FLOAT32;

ERR_T_FLOAT32:CONSTANT INTEGER := 248; -- 
FUNCTION T_FLOAT32_IsConstraintValid(val : in T_FLOAT32) return adaasn1rtl.ASN1_RESULT;
-- T_QUAT_FLOAT32 --------------------------------------------
SUBTYPE T_QUAT_FLOAT32_index is integer range 1..4;
TYPE T_QUAT_FLOAT32_array IS ARRAY (T_QUAT_FLOAT32_index) OF T_FLOAT32;
TYPE T_QUAT_FLOAT32 IS  RECORD
    Data  : T_QUAT_FLOAT32_array;
END RECORD;

function T_QUAT_FLOAT32_Equal(val1, val2: in T_QUAT_FLOAT32) return Boolean;

function T_QUAT_FLOAT32_Init return T_QUAT_FLOAT32;

ERR_T_QUAT_FLOAT32_ELM:CONSTANT INTEGER := 266; 
FUNCTION T_QUAT_FLOAT32_IsConstraintValid(val : in T_QUAT_FLOAT32) return adaasn1rtl.ASN1_RESULT;
-- T_VECT3_FLOAT32 --------------------------------------------
SUBTYPE T_VECT3_FLOAT32_index is integer range 1..3;
TYPE T_VECT3_FLOAT32_array IS ARRAY (T_VECT3_FLOAT32_index) OF T_FLOAT32;
TYPE T_VECT3_FLOAT32 IS  RECORD
    Data  : T_VECT3_FLOAT32_array;
END RECORD;

function T_VECT3_FLOAT32_Equal(val1, val2: in T_VECT3_FLOAT32) return Boolean;

function T_VECT3_FLOAT32_Init return T_VECT3_FLOAT32;

ERR_T_VECT3_FLOAT32_ELM:CONSTANT INTEGER := 305; 
FUNCTION T_VECT3_FLOAT32_IsConstraintValid(val : in T_VECT3_FLOAT32) return adaasn1rtl.ASN1_RESULT;
-- T_GNC_LV_SIM_CONTEXT --------------------------------------------

TYPE T_GNC_LV_SIM_CONTEXT IS RECORD 
    attitude_quaternion : T_QUAT_FLOAT32;
    ng_vel_incr_irs : T_VECT3_FLOAT32;
    ng_vel_incr_accelero : T_VECT3_FLOAT32;
    filtered_angles_sample_1 : T_VECT3_FLOAT32;
    filtered_angles_sample_2 : T_VECT3_FLOAT32;
END RECORD;

function T_GNC_LV_SIM_CONTEXT_Equal(val1, val2: in T_GNC_LV_SIM_CONTEXT) return Boolean;

function T_GNC_LV_SIM_CONTEXT_Init return T_GNC_LV_SIM_CONTEXT;

ERR_T_GNC_LV_SIM_CONTEXT_ATTITUDE_QUATERNION_ELM:CONSTANT INTEGER := 36; 
ERR_T_GNC_LV_SIM_CONTEXT_NG_VEL_INCR_IRS_ELM:CONSTANT INTEGER := 61; 
ERR_T_GNC_LV_SIM_CONTEXT_NG_VEL_INCR_ACCELERO_ELM:CONSTANT INTEGER := 86; 
ERR_T_GNC_LV_SIM_CONTEXT_FILTERED_ANGLES_SAMPLE_1_ELM:CONSTANT INTEGER := 111; 
ERR_T_GNC_LV_SIM_CONTEXT_FILTERED_ANGLES_SAMPLE_2_ELM:CONSTANT INTEGER := 136; 
FUNCTION T_GNC_LV_SIM_CONTEXT_IsConstraintValid(val : in T_GNC_LV_SIM_CONTEXT) return adaasn1rtl.ASN1_RESULT;
-- T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT --------------------------------------------
SUBTYPE T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_index is integer range 1..20;
TYPE T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_array IS ARRAY (T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_index) OF T_FLOAT32;
TYPE T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT IS  RECORD
    Data  : T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_array;
END RECORD;

function T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_Equal(val1, val2: in T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT) return Boolean;

function T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_Init return T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT;

ERR_T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_ELM:CONSTANT INTEGER := 333; 
FUNCTION T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT_IsConstraintValid(val : in T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT) return adaasn1rtl.ASN1_RESULT;
-- T_TVC_SET_POINT_ENG_VECT --------------------------------------------
SUBTYPE T_TVC_SET_POINT_ENG_VECT_index is integer range 1..8;
TYPE T_TVC_SET_POINT_ENG_VECT_array IS ARRAY (T_TVC_SET_POINT_ENG_VECT_index) OF T_FLOAT32;
TYPE T_TVC_SET_POINT_ENG_VECT IS  RECORD
    Data  : T_TVC_SET_POINT_ENG_VECT_array;
END RECORD;

function T_TVC_SET_POINT_ENG_VECT_Equal(val1, val2: in T_TVC_SET_POINT_ENG_VECT) return Boolean;

function T_TVC_SET_POINT_ENG_VECT_Init return T_TVC_SET_POINT_ENG_VECT;

ERR_T_TVC_SET_POINT_ENG_VECT_ELM:CONSTANT INTEGER := 361; 
FUNCTION T_TVC_SET_POINT_ENG_VECT_IsConstraintValid(val : in T_TVC_SET_POINT_ENG_VECT) return adaasn1rtl.ASN1_RESULT;
-- T_RACS_EV_CMD_VECT --------------------------------------------
SUBTYPE T_RACS_EV_CMD_VECT_index is integer range 1..6;
TYPE T_RACS_EV_CMD_VECT_array IS ARRAY (T_RACS_EV_CMD_VECT_index) OF T_FLOAT32;
TYPE T_RACS_EV_CMD_VECT IS  RECORD
    Data  : T_RACS_EV_CMD_VECT_array;
END RECORD;

function T_RACS_EV_CMD_VECT_Equal(val1, val2: in T_RACS_EV_CMD_VECT) return Boolean;

function T_RACS_EV_CMD_VECT_Init return T_RACS_EV_CMD_VECT;

ERR_T_RACS_EV_CMD_VECT_ELM:CONSTANT INTEGER := 389; 
FUNCTION T_RACS_EV_CMD_VECT_IsConstraintValid(val : in T_RACS_EV_CMD_VECT) return adaasn1rtl.ASN1_RESULT;
-- T_GNC_LV_SIM_INPUTS --------------------------------------------

TYPE T_GNC_LV_SIM_INPUTS IS RECORD 
    sequ_exec_request_vect : T_HAS_SEQUENCE_EXEC_BEEN_REQUESTED_VECT;
    tvc_set_point_eng_vect : T_TVC_SET_POINT_ENG_VECT;
    racs_ev_cmd_vect : T_RACS_EV_CMD_VECT;
END RECORD;

function T_GNC_LV_SIM_INPUTS_Equal(val1, val2: in T_GNC_LV_SIM_INPUTS) return Boolean;

function T_GNC_LV_SIM_INPUTS_Init return T_GNC_LV_SIM_INPUTS;

ERR_T_GNC_LV_SIM_INPUTS_SEQU_EXEC_REQUEST_VECT_ELM:CONSTANT INTEGER := 167; 
ERR_T_GNC_LV_SIM_INPUTS_TVC_SET_POINT_ENG_VECT_ELM:CONSTANT INTEGER := 192; 
ERR_T_GNC_LV_SIM_INPUTS_RACS_EV_CMD_VECT_ELM:CONSTANT INTEGER := 217; 
FUNCTION T_GNC_LV_SIM_INPUTS_IsConstraintValid(val : in T_GNC_LV_SIM_INPUTS) return adaasn1rtl.ASN1_RESULT;
-- T_Plot --------------------------------------------
SUBTYPE T_Plot_major_cycle is adaasn1rtl.Asn1UInt range 0 .. 9999999999;

SUBTYPE T_Plot_subcycle is adaasn1rtl.Asn1UInt range 0 .. 7;


TYPE T_Plot IS RECORD 
    major_cycle : T_Plot_major_cycle;
    subcycle : T_Plot_subcycle;
    gnc_inputs : T_GNC_LV_SIM_CONTEXT;
    gnc_outputs : T_GNC_LV_SIM_INPUTS;
END RECORD;

function T_Plot_major_cycle_Equal(val1, val2: in T_Plot_major_cycle) return Boolean;

function T_Plot_subcycle_Equal(val1, val2: in T_Plot_subcycle) return Boolean;

function T_Plot_Equal(val1, val2: in T_Plot) return Boolean;

function T_Plot_major_cycle_Init return T_Plot_major_cycle;
function T_Plot_subcycle_Init return T_Plot_subcycle;
function T_Plot_Init return T_Plot;

ERR_T_PLOT_MAJOR_CYCLE:CONSTANT INTEGER := 424; 
ERR_T_PLOT_SUBCYCLE:CONSTANT INTEGER := 431; 
ERR_T_PLOT_GNC_INPUTS_ATTITUDE_QUATERNION_ELM:CONSTANT INTEGER := 438; 
ERR_T_PLOT_GNC_INPUTS_NG_VEL_INCR_IRS_ELM:CONSTANT INTEGER := 463; 
ERR_T_PLOT_GNC_INPUTS_NG_VEL_INCR_ACCELERO_ELM:CONSTANT INTEGER := 488; 
ERR_T_PLOT_GNC_INPUTS_FILTERED_ANGLES_SAMPLE_1_ELM:CONSTANT INTEGER := 513; 
ERR_T_PLOT_GNC_INPUTS_FILTERED_ANGLES_SAMPLE_2_ELM:CONSTANT INTEGER := 538; 
ERR_T_PLOT_GNC_OUTPUTS_SEQU_EXEC_REQUEST_VECT_ELM:CONSTANT INTEGER := 573; 
ERR_T_PLOT_GNC_OUTPUTS_TVC_SET_POINT_ENG_VECT_ELM:CONSTANT INTEGER := 598; 
ERR_T_PLOT_GNC_OUTPUTS_RACS_EV_CMD_VECT_ELM:CONSTANT INTEGER := 623; 
FUNCTION T_Plot_IsConstraintValid(val : in T_Plot) return adaasn1rtl.ASN1_RESULT;

size_T_QUAT_COMPONENTS : CONSTANT adaasn1rtl.Asn1Int:= 4;
axis_x_roll : CONSTANT T_AXIS_3_ID:= 0;
axis_y_yaw : CONSTANT T_AXIS_3_ID:= 1;
axis_z_pitch : CONSTANT T_AXIS_3_ID:= 2;
size_T_AXIS_3_ID : CONSTANT adaasn1rtl.Asn1Int:= 3;
size_T_SEQUENCE_ID : CONSTANT adaasn1rtl.Asn1Int:= 20;
size_T_TVC_SET_POINT_ENG_VECT_IDX : CONSTANT adaasn1rtl.Asn1Int:= 8;
size_T_ACS_EQPT_ID : CONSTANT adaasn1rtl.Asn1Int:= 6; 

private
   --# hide VEGA;


END VEGA;