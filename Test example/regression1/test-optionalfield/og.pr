system og;
    /* CIF TEXT (159, 221), (289, 188) */
    -- Text area for declarations and comments
    
    use dv comment 'dataview.asn';
    
    signal run;
    
    signal we;
    /* CIF ENDTEXT */
    channel c
        from env to og with run;
        from og to env with we;
    endchannel;
    block og;
        signalroute r
            from env to og with run;
            from og to env with we;
        connect c and r;
        /* CIF PROCESS (225, 50), (150, 75) */
        process og;
            /* CIF TEXT (706, 266), (448, 158) */
            dcl s1 Seq := { a TRUE };
            
            dcl s2 Seq;
            
            -- Sequence containing DEFAULT values
            -- When not initialized by the user, the fields should anyway
            -- be set to their default (call to _Initialize should be done when declared!)
            dcl def SeqDef;
            
            dcl def2 SeqDef := { b 19, c 42 };
            /* CIF ENDTEXT */
            /* CIF START (381, 267), (70, 35) */
            START;
                /* CIF task (351, 317), (130, 35) */
                task s2 := { a FALSE};
                /* CIF decision (373, 372), (85, 48) */
                decision exist (s2.a)
                /* CIF comment (478, 378), (122, 38) */
                comment 'test presence of
optional field';
                    /* CIF ANSWER (336, 440), (70, 23) */
                    (true):
                    /* CIF ANSWER (426, 440), (70, 23) */
                    (false):
                enddecision;
                /* CIF decision (361, 478), (110, 50) */
                decision exist (s2.b.b_c);
                    /* CIF ANSWER (336, 548), (70, 23) */
                    (true):
                    /* CIF ANSWER (426, 548), (70, 23) */
                    (false):
                enddecision;
                /* CIF PROCEDURECALL (279, 586), (273, 35) */
                call writeln (exist(s2.a), ' and ', exist(s2.b));
                /* CIF task (359, 636), (114, 35) */
                task s2.a := TRUE;
                /* CIF task (346, 686), (139, 35) */
                task s2.b.b_c := TRUE;
                /* CIF task (336, 736), (159, 35) */
                task s2 :={ b { b_c TRUE }};
                /* CIF PROCEDURECALL (356, 791), (119, 35) */
                call writeln (def.b)
                /* CIF comment (495, 791), (201, 35) */
                comment 'Uninitialized, expect garbage';
                /* CIF PROCEDURECALL (356, 846), (120, 35) */
                call writeln (def2.b)
                /* CIF comment (496, 846), (145, 35) */
                comment 'Should display 19';
                /* CIF task (370, 901), (92, 35) */
                task def2.b := 16;
                /* CIF PROCEDURECALL (356, 951), (120, 35) */
                call writeln (def2.b)
                /* CIF comment (496, 951), (145, 35) */
                comment 'Should display 16';
                /* CIF NEXTSTATE (381, 1001), (70, 35) */
                NEXTSTATE wait;
            /* CIF state (381, 1001), (70, 35) */
            state wait;
                /* CIF input (373, 1056), (84, 35) */
                input run;
                    /* CIF NEXTSTATE (371, 1106), (88, 35) */
                    NEXTSTATE wait;
            endstate;
        endprocess og;
    endblock;
endsystem;