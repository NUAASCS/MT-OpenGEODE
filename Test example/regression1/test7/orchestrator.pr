/* CIF PROCESS (201, 147), (150, 75) */
process orchestrator;
    /* CIF TEXT (1074, 12), (289, 233) */
    -- GNC Orchestrator for the VEGA simulator
    
    DCL gnc_output T_GNC_LV_SIM_INPUTS;
    
    DCL gnc_input T_GNC_LV_SIM_CONTEXT;
    
    DCL major_cycle T_UInt32 := 1;
    DCL sub_cycle T_Int8 := -1;
    
    dcl run_counter T_UInt32 :=0;
    
    dcl command Simulation_Param;
    
    timer timeout;
    /* CIF ENDTEXT */
    /* CIF procedure (748, 54), (122, 50) */
    procedure update_cycle
    /* CIF comment (921, 53), (100, 50) */
    comment 'Checkme';
        /* CIF START (335, 138), (100, 50) */
        START;
            /* CIF decision (326, 203), (118, 70) */
            decision sub_cycle = 7
            /* CIF comment (464, 213), (199, 50) */
            comment 'Compute next major cycle';
                /* CIF ANSWER (203, 293), (100, 35) */
                (true):
                    /* CIF task (115, 343), (276, 53) */
                    task sub_cycle := 0,
major_cycle := (major_cycle + 1) mod 50;
                    /* CIF PROCEDURECALL (153, 411), (200, 50) */
                    call jump_to_next_major_cycle;
                /* CIF ANSWER (473, 293), (100, 35) */
                (false):
                    /* CIF task (401, 343), (243, 50) */
                    task sub_cycle := (sub_cycle + 1) mod 7;
            enddecision;
            /* CIF return (360, 476), (50, 50) */
            return ;
    endprocedure;
    /* CIF START (1579, 273), (100, 50) */
    START;
        /* CIF PROCEDURECALL (1535, 338), (189, 50) */
        call writeln
('[Orchestrator] Startup');
        /* CIF NEXTSTATE (1571, 403), (116, 50) */
        NEXTSTATE Stopped;
    /* CIF label (629, 179), (100, 50) */
    connection Here:
    /* CIF End Label */
    endconnection;
    /* CIF state (754, 128), (105, 50) */
    state test_mode;
        /* CIF input (739, 198), (136, 50) */
        input simulate
(command);
            /* CIF join (782, 263), (50, 50) */
            join run_cmd;
    endstate;
    /* CIF state (422, 30), (100, 50) */
    state Pause;
        /* CIF input (419, 100), (105, 50) */
        input simulate
(command);
            /* CIF join (447, 165), (50, 50) */
            join run_cmd;
    endstate;
    /* CIF state (1972, 105), (100, 50) */
    state Running;
        /* CIF input (1753, 175), (100, 50) */
        input pulse
        /* CIF comment (1873, 175), (114, 50) */
        comment 'Periodic call
(40 ms)';
            /* CIF PROCEDURECALL (1745, 240), (117, 53) */
            call gnc_onestep
(gnc_input,
gnc_output)
            /* CIF comment (1873, 243), (170, 50) */
            comment 'Call the GNC function';
            /* CIF output (1734, 308), (139, 50) */
            output VESAT_one_step
(gnc_output)
            /* CIF comment (1893, 308), (133, 50) */
            comment 'Get VESAT data';
            /* CIF PROCEDURECALL (1739, 373), (129, 50) */
            call set_timer
(1000, timeout)
            /* CIF comment (1887, 373), (209, 50) */
            comment 'Make sure we receive
an answer within one second';
            /* CIF NEXTSTATE (1739, 438), (129, 50) */
            NEXTSTATE Wait_for_vesat;
        /* CIF input (2106, 175), (136, 50) */
        input simulate
(command)
        /* CIF comment (2262, 175), (182, 50) */
        comment 'New command from GUI';
            /* CIF join (2149, 240), (50, 50) */
            join run_cmd;
    endstate;
    /* CIF state (215, 26), (116, 50) */
    state Stopped;
        /* CIF input (221, 96), (105, 50) */
        input simulate
(command);
            /* CIF PROCEDURECALL (224, 161), (100, 50) */
            call gnc_init;
            /* CIF label (226, 226), (96, 50) */
            run_cmd:
            /* CIF task (191, 291), (166, 50) */
            task gnc_input :=
command!gnc_inputs;
            /* CIF decision (163, 356), (221, 70) */
            decision present(command!command);
                /* CIF ANSWER (843, 446), (100, 35) */
                (pause):
                    /* CIF PROCEDURECALL (804, 496), (179, 50) */
                    call writeln
('[Orchestrator] Pause');
                    /* CIF NEXTSTATE (843, 561), (100, 50) */
                    NEXTSTATE Pause;
                /* CIF ANSWER (66, 447), (109, 35) */
                (run_forever):
                    /* CIF task (51, 497), (139, 50) */
                    task run_counter := 0;
                    /* CIF PROCEDURECALL (0, 562), (242, 78) */
                    call writeln
('[Orchestrator] Running forever ');
                /* CIF ANSWER (587, 446), (127, 35) */
                (run_n_seconds):
                    /* CIF task (508, 496), (286, 53) */
                    task run_counter :=
(command!command!run_n_seconds * 25)
mod 2147483647;
                    /* CIF PROCEDURECALL (555, 564), (192, 78) */
                    call writeln
('[Orchestrator] Running ',
run_counter,
 ' steps');
                /* CIF ANSWER (320, 446), (110, 35) */
                (run_n_steps):
                    /* CIF task (252, 496), (246, 53) */
                    task run_counter :=
(command!command!run_n_steps)
mod 2147483647;
                    /* CIF PROCEDURECALL (279, 564), (192, 78) */
                    call writeln
('[Orchestrator] Running ',
run_counter,
 ' steps');
                    /* CIF label (325, 657), (100, 50) */
                    There:
                /* CIF ANSWER (1058, 446), (100, 35) */
                (test_gnc):
                    /* CIF PROCEDURECALL (1050, 496), (117, 53) */
                    call gnc_onestep
(gnc_input,
gnc_output)
                    /* CIF comment (1187, 498), (170, 50) */
                    comment 'Call the GNC function
(for testing only)';
                    /* CIF output (993, 564), (230, 68) */
                    output plot( { major_cycle major_cycle,
subcycle sub_cycle,
gnc_inputs gnc_input,
gnc_outputs gnc_output });
                    /* CIF PROCEDURECALL (1048, 647), (121, 50) */
                    call update_cycle;
                    /* CIF NEXTSTATE (1051, 712), (114, 50) */
                    NEXTSTATE test_mode;
            enddecision;
            /* CIF label (211, 777), (126, 50) */
            AndHereAgain:
            /* CIF decision (208, 842), (131, 70) */
            decision run_counter = 0;
                /* CIF ANSWER (276, 932), (100, 35) */
                (false):
                    /* CIF NEXTSTATE (276, 982), (100, 50) */
                    NEXTSTATE Running;
                /* CIF ANSWER (166, 932), (100, 35) */
                (true):
                    /* CIF NEXTSTATE (166, 982), (100, 50) */
                    NEXTSTATE Pause;
            enddecision;
    endstate;
    /* CIF state (2956, 97), (133, 50) */
    state Wait_for_VESAT;
        /* CIF input (2557, 167), (111, 50) */
        input VESAT_Data
(gnc_input);
            /* CIF PROCEDURECALL (2555, 232), (116, 50) */
            call reset_timer
(timeout);
            /* CIF PROCEDURECALL (2552, 297), (121, 50) */
            call update_cycle
            /* CIF comment (2689, 297), (199, 50) */
            comment 'Compute next major cycle';
            /* CIF decision (2549, 362), (128, 70) */
            decision run_counter;
                /* CIF ANSWER (2621, 452), (100, 35) */
                (0):
                /* CIF ANSWER (2465, 453), (100, 35) */
                (>1):
                    /* CIF task (2419, 503), (192, 50) */
                    task run_counter :=
(run_counter-1) mod 1;
                /* CIF ANSWER (2769, 453), (100, 35) */
                ELSE:
                    /* CIF PROCEDURECALL (2732, 503), (175, 50) */
                    call writeln
('[Orchestrator] Done');
                    /* CIF NEXTSTATE (2769, 568), (100, 50) */
                    NEXTSTATE Pause;
            enddecision;
            /* CIF NEXTSTATE (2563, 633), (100, 50) */
            NEXTSTATE Running;
        /* CIF input (3003, 167), (100, 50) */
        input pulse;
            /* CIF PROCEDURECALL (2951, 232), (205, 50) */
            call writeln
('[Orchestrator] Cycle loss');
            /* CIF NEXTSTATE (2989, 297), (129, 50) */
            NEXTSTATE Wait_for_vesat;
        /* CIF input (3241, 167), (100, 50) */
        input timeout;
            /* CIF PROCEDURECALL (3166, 232), (250, 50) */
            call writeln
('[Orchestrator] Lost connection?');
            /* CIF NEXTSTATE (3241, 297), (100, 50) */
            NEXTSTATE Pause;
    endstate;
endprocess orchestrator;